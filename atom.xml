<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>stardew的博客</title>
  
  <subtitle>做个安静大气的美女子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/stardew/"/>
  <updated>2018-06-28T11:08:58.000Z</updated>
  <id>https://github.com/stardew/</id>
  
  <author>
    <name>stardew</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>main</title>
    <link href="https://github.com/stardew/main/"/>
    <id>https://github.com/stardew/main/</id>
    <published>2115-02-25T16:29:00.000Z</published>
    <updated>2018-06-28T11:08:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://segmentfault.com/img/bVbcOD6" alt=""></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="250" height="86" src="//music.163.com/outchain/player?type=2&id=450518399&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://segmentfault.com/img/bVbcOD6&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;2
      
    
    </summary>
    
      <category term="娱乐" scheme="https://github.com/stardew/categories/%E5%A8%B1%E4%B9%90/"/>
    
    
      <category term="joy" scheme="https://github.com/stardew/tags/joy/"/>
    
  </entry>
  
  <entry>
    <title>root-shadow</title>
    <link href="https://github.com/stardew/root-shadow/"/>
    <id>https://github.com/stardew/root-shadow/</id>
    <published>2018-06-22T00:00:00.000Z</published>
    <updated>2018-06-28T11:12:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何查看控制台隐藏样式shadow-root"><a href="#如何查看控制台隐藏样式shadow-root" class="headerlink" title="如何查看控制台隐藏样式shadow-root"></a>如何查看控制台隐藏样式shadow-root</h2><h2 id="1-打开视频"><a href="#1-打开视频" class="headerlink" title="1.打开视频"></a>1.打开视频</h2><p>打开一个视频链接，例如：<a href="http://m.v.baidu.com/watch/7870860677481105842.html?&amp;type=&amp;fr=" target="_blank" rel="external">http://m.v.baidu.com/watch/7870860677481105842.html?&amp;type=&amp;fr=</a></p><p>打开控制台，此时video样式显示如下：<br><img src="https://segmentfault.com/img/bVbcruK" alt="clipboard.png"></p><h2 id="2-设置"><a href="#2-设置" class="headerlink" title="2.设置"></a>2.设置</h2><p>点击右上角竖着的…，选择settings，如上图，显示如下图：<br><img src="https://segmentfault.com/img/bVbcru8" alt="clipboard.png"><br>找到Elements，勾选 show user agent shadow DOM，再回到控制台，就可以看到隐藏的样式了。如下图所示：<br><img src="https://segmentfault.com/img/bVbcrxl" alt="clipboard.png"></p><h5 id="转自-如何查看控制台隐藏样式shadow-root"><a href="#转自-如何查看控制台隐藏样式shadow-root" class="headerlink" title="[转自] 如何查看控制台隐藏样式shadow-root"></a>[转自] <a href="">如何查看控制台隐藏样式shadow-root</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;如何查看控制台隐藏样式shadow-root&quot;&gt;&lt;a href=&quot;#如何查看控制台隐藏样式shadow-root&quot; class=&quot;headerlink&quot; title=&quot;如何查看控制台隐藏样式shadow-root&quot;&gt;&lt;/a&gt;如何查看控制台隐藏样式shadow-ro
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>wechat-public</title>
    <link href="https://github.com/stardew/wechat-public/"/>
    <id>https://github.com/stardew/wechat-public/</id>
    <published>2018-06-21T00:00:00.000Z</published>
    <updated>2018-06-28T11:14:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何判断用户是否已关注公众号"><a href="#如何判断用户是否已关注公众号" class="headerlink" title="如何判断用户是否已关注公众号"></a>如何判断用户是否已关注公众号</h2><h2 id="一、微信公众平台配置"><a href="#一、微信公众平台配置" class="headerlink" title="一、微信公众平台配置"></a>一、微信公众平台配置</h2><h3 id="1-获取appid-appsecret，添加白名单"><a href="#1-获取appid-appsecret，添加白名单" class="headerlink" title="1. 获取appid, appsecret，添加白名单"></a>1. 获取appid, appsecret，添加白名单</h3><p>登录微信公众平台，进入基本配置。开发中需要用到两个参数，appId和appSecret（appSecret只展示一次，需保存下来，否则需要重置获取）。<br>获取access_token时需要添加IP白名单。<br><img src="https://segmentfault.com/img/bVbcc8v" alt="clipboard.png"><br>点击查看<br><img src="https://segmentfault.com/img/bVbcc7q" alt="clipboard.png"><br>点击修改<br><img src="https://segmentfault.com/img/bVbcc7D" alt="clipboard.png"></p><h3 id="2-添加网页授权"><a href="#2-添加网页授权" class="headerlink" title="2. 添加网页授权"></a>2. 添加网页授权</h3><p>进入公众号设置=》功能设置=》网页授权域名<br><img src="https://segmentfault.com/img/bVbcdci" alt="clipboard.png"><br>点击设置，input框中输入授权回调页的域名参考第1点（只能填写一个），下载第3点中的txt文档，上传至服务器的根目录。<br><img src="https://segmentfault.com/img/bVbcd5o" alt="clipboard.png"></p><h2 id="二、php后端实现"><a href="#二、php后端实现" class="headerlink" title="二、php后端实现"></a>二、php后端实现</h2><p>微信开放接口全局返回码说明参考：<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1433747234" target="_blank" rel="external">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1433747234</a></p><h3 id="1-获取全局token"><a href="#1-获取全局token" class="headerlink" title="1. 获取全局token"></a>1. 获取全局token</h3><p>此token有效期为2小时，可以暂存起来，过期后需要重新获取。<br>PS： 项目中必须走同一个接口，否则容易互刷导致过期。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getToken</span><span class="params">($appid, $appsecret)</span></span>&#123;</div><div class="line">    $url = <span class="string">'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid='</span>.$appid.<span class="string">'&amp;secret='</span>.$appsecret;</div><div class="line">    <span class="keyword">return</span> Curl::callWebServer($url);</div><div class="line">&#125;</div><div class="line"></div><div class="line">正确返回结果：</div><div class="line">    &#123;</div><div class="line">        <span class="string">"access_token"</span>: <span class="string">"ACCESS_TOKEN"</span>,</div><div class="line">        <span class="string">"expires_in"</span>: <span class="number">7200</span></div><div class="line">    &#125;</div><div class="line">    返回结果参数说明：</div><div class="line">    参数          说明</div><div class="line">    access_token  获取到的全局token</div><div class="line">    expires_in    凭证有效时间，单位：秒</div><div class="line">    </div><div class="line">错误返回结果：</div><div class="line">    &#123;<span class="string">"errcode"</span>: <span class="number">40013</span>, <span class="string">"errmsg"</span>: <span class="string">"invalid appid"</span>&#125;</div><div class="line">    返回结果参数说明：</div><div class="line">    返回码说明</div><div class="line">    <span class="number">-1</span>   系统繁忙，此时请开发者稍候再试</div><div class="line">    <span class="number">0</span>    请求成功</div><div class="line">    <span class="number">40001</span>AppSecret错误或者AppSecret不属于这个公众号，请开发者确认        AppSecret的正确性</div><div class="line">    <span class="number">40002</span>请确保grant_type字段值为client_credential</div><div class="line">    <span class="number">40164</span>调用接口的IP地址不在白名单中，请在接口IP白名单中进行设置。（小程序及小游戏调用不要求IP地址在白名单内。）</div></pre></td></tr></table></figure></p><h3 id="2-获取用户关联公众号的openid"><a href="#2-获取用户关联公众号的openid" class="headerlink" title="2. 获取用户关联公众号的openid"></a>2. 获取用户关联公众号的openid</h3><p>分两步，先要获取到用户对公众号的授权码，然后拿这个码去获取临时access_token和openid。</p><p>获取用户授权码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getCode</span><span class="params">($appId, $redirect_uri, $state=<span class="number">1</span>, $scope=<span class="string">'snsapi_base'</span>, $response_type=<span class="string">'code'</span>)</span></span>&#123;</div><div class="line">    $url = <span class="string">'https://open.weixin.qq.com/connect/oauth2/authorize?appid='</span>.$appId.<span class="string">'&amp;redirect_uri='</span>.$redirect_uri.<span class="string">'&amp;response_type='</span>.$response_type.<span class="string">'&amp;scope='</span>.$scope.<span class="string">'&amp;state='</span>.$state.<span class="string">'#wechat_redirect'</span>;</div><div class="line">    header(<span class="string">'Location: '</span>.$url, <span class="keyword">true</span>, <span class="number">301</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">正确返回结果：</div><div class="line">    返回code码，并且跳转回调页面$redirect_uri</div><div class="line">    </div><div class="line">错误返回结果：</div><div class="line">    &#123;<span class="string">"errcode"</span>: <span class="number">10003</span>, <span class="string">"errmsg"</span>: <span class="string">"redirect_uri域名与后台配置不一致"</span>&#125;</div><div class="line">    返回结果参数说明：</div><div class="line">    返回码说明</div><div class="line">    <span class="number">10003</span>redirect_uri域名与后台配置不一致</div><div class="line">    <span class="number">10004</span>此公众号被封禁</div><div class="line">    <span class="number">10005</span>此公众号并没有这些scope的权限</div><div class="line">    <span class="number">10006</span>必须关注此测试号</div><div class="line">    <span class="number">10009</span>操作太频繁了，请稍后重试</div><div class="line">    <span class="number">10010</span>scope不能为空</div><div class="line">    <span class="number">10011</span>redirect_uri不能为空</div><div class="line">    <span class="number">10012</span>appid不能为空</div><div class="line">    <span class="number">10013</span>state不能为空</div><div class="line">    <span class="number">10015</span>公众号未授权第三方平台，请检查授权状态</div><div class="line">    <span class="number">10016</span>不支持微信开放平台的Appid，请使用公众号Appid</div></pre></td></tr></table></figure></p><p>通过getCode获取到的code换取网页授权的access_token和openid<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getAccessToken</span><span class="params">($code, $appid, $appsecret, $grant_type=<span class="string">'authorization_code'</span>)</span></span>&#123;</div><div class="line">    $url = <span class="string">'https://api.weixin.qq.com/sns/oauth2/access_token?appid='</span>.$appid.<span class="string">'&amp;secret='</span>.$appsecret.<span class="string">'&amp;code='</span>.$code.<span class="string">'&amp;grant_type='</span>.$grant_type.<span class="string">''</span>;</div><div class="line">    <span class="keyword">return</span> Curl::callWebServer($url);</div><div class="line">&#125;</div><div class="line">   </div><div class="line">正确返回结果：</div><div class="line">    &#123; </div><div class="line">        <span class="string">"access_token"</span>: <span class="string">"ACCESS_TOKEN"</span>,</div><div class="line">        <span class="string">"expires_in"</span>: <span class="number">7200</span>,</div><div class="line">        <span class="string">"refresh_token"</span>: <span class="string">"REFRESH_TOKEN"</span>,</div><div class="line">        <span class="string">"openid"</span>: <span class="string">"OPENID"</span>,</div><div class="line">        <span class="string">"scope"</span>: <span class="string">"SCOPE"</span></div><div class="line">    &#125;</div><div class="line">    返回参数说明</div><div class="line">    参数        描述</div><div class="line">    access_token网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</div><div class="line">    expires_inaccess_token接口调用凭证超时时间，单位（秒）</div><div class="line">    refresh_token用户刷新access_token</div><div class="line">    openid用户唯一标识，请注意，在未关注公众号时，用户访问公众号的网页，也会产生一个用户和公众号唯一的OpenID</div><div class="line">    scope用户授权的作用域，使用逗号（,）分隔</div><div class="line">    </div><div class="line">错误返回结果：</div><div class="line">    &#123;<span class="string">"errcode"</span>:<span class="number">40029</span>, <span class="string">"errmsg"</span>:<span class="string">"invalid code"</span>&#125;</div></pre></td></tr></table></figure></p><h3 id="3-获取用户信息"><a href="#3-获取用户信息" class="headerlink" title="3. 获取用户信息"></a>3. 获取用户信息</h3><p>使用第2步中获取的openId和第1步中获取的token去获取用户信息<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getUserInfo</span><span class="params">($openId, $token)</span></span>&#123;</div><div class="line">    $url = <span class="string">'https://api.weixin.qq.com/cgi-bin/user/info?access_token='</span>.$token.<span class="string">'&amp;openid='</span>.$openId.<span class="string">'&amp;lang=zh_CN'</span>;</div><div class="line">    <span class="keyword">return</span> Curl::callWebServer($queryUrl, <span class="string">''</span>, <span class="string">'GET'</span>);</div><div class="line">&#125;</div><div class="line">正确返回结果：</div><div class="line">    &#123;</div><div class="line">        <span class="string">"subscribe"</span>: <span class="number">1</span>, </div><div class="line">        <span class="string">"openid"</span>: <span class="string">"o6_bmjrPTlm6_2sgVt7hMZOPfL2M"</span>, </div><div class="line">        <span class="string">"nickname"</span>: <span class="string">"Band"</span>, </div><div class="line">        <span class="string">"sex"</span>: <span class="number">1</span>, </div><div class="line">        <span class="string">"language"</span>: <span class="string">"zh_CN"</span>, </div><div class="line">        <span class="string">"city"</span>: <span class="string">"广州"</span>, </div><div class="line">        <span class="string">"province"</span>: <span class="string">"广东"</span>, </div><div class="line">        <span class="string">"country"</span>: <span class="string">"中国"</span>, </div><div class="line">        <span class="string">"headimgurl"</span>:<span class="string">"http://thirdwx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/0"</span>,</div><div class="line">        <span class="string">"subscribe_time"</span>: <span class="number">1382694957</span>,</div><div class="line">        <span class="string">"unionid"</span>: <span class="string">" o6_bmasdasdsad6_2sgVt7hMZOPfL"</span></div><div class="line">        <span class="string">"remark"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"groupid"</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">"tagid_list"</span>:[<span class="number">128</span>,<span class="number">2</span>],</div><div class="line">        <span class="string">"subscribe_scene"</span>: <span class="string">"ADD_SCENE_QR_CODE"</span>,</div><div class="line">        <span class="string">"qr_scene"</span>: <span class="number">98765</span>,</div><div class="line">        <span class="string">"qr_scene_str"</span>: <span class="string">""</span></div><div class="line">    &#125;</div><div class="line">    返回参数说明：</div><div class="line">        参数        说明</div><div class="line">        subscribe   用户是否订阅该公众号标识，值为<span class="number">0</span>时，代表此用户没有关注该公众号，拉取不到其余信息。</div><div class="line">        openid      用户的标识，对当前公众号唯一</div><div class="line">        nickname    用户的昵称</div><div class="line">        sex         用户的性别，值为<span class="number">1</span>时是男性，值为<span class="number">2</span>时是女性，值为<span class="number">0</span>时是未知</div><div class="line">        city        用户所在城市</div><div class="line">        country     用户所在国家</div><div class="line">        province    用户所在省份</div><div class="line">        language    用户的语言，简体中文为zh_CN</div><div class="line">        headimgurl  用户头像，最后一个数值代表正方形头像大小（有<span class="number">0</span>、<span class="number">46</span>、<span class="number">64</span>、<span class="number">96</span>、<span class="number">132</span>数值可选，<span class="number">0</span>代表<span class="number">640</span>*<span class="number">640</span>正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。</div><div class="line">        subscribe_time  用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间</div><div class="line">        unionid     只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。</div><div class="line">        remark      公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注</div><div class="line">        groupid     用户所在的分组ID（兼容旧的用户分组接口）</div><div class="line">        tagid_list  用户被打上的标签ID列表</div><div class="line">        subscribe_scene 返回用户关注的渠道来源，ADD_SCENE_SEARCH 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE 扫描二维码，ADD_SCENEPROFILE LINK 图文页内名称点击，ADD_SCENE_PROFILE_ITEM 图文页右上角菜单，ADD_SCENE_PAID 支付后关注，ADD_SCENE_OTHERS 其他</div><div class="line">        qr_scene    二维码扫码场景（开发者自定义）</div><div class="line">        qr_scene_str二维码扫码场景描述（开发者自定义）</div><div class="line"></div><div class="line">错误结果：</div><div class="line">    &#123;<span class="string">"errcode"</span>:<span class="number">40013</span>,<span class="string">"errmsg"</span>:<span class="string">"invalid appid"</span>&#125;</div></pre></td></tr></table></figure></p><h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><p>判断是否关注过，此处为入口：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isConcern</span><span class="params">($appId, $appSecret)</span> </span>&#123;</div><div class="line">    $param = <span class="string">''</span>; <span class="comment">// 如果有参数</span></div><div class="line">    <span class="keyword">$this</span>-&gt;getCode($appId, U(<span class="string">'callback'</span>, <span class="string">'param='</span>.$param), <span class="number">1</span> ,<span class="string">'snsapi_base'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>授权后回调<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">callback</span><span class="params">()</span></span>&#123;</div><div class="line">    $isconcern = <span class="number">0</span>;</div><div class="line">    $code = <span class="keyword">$this</span>-&gt;_get(<span class="string">'code'</span>);</div><div class="line">    $param = <span class="keyword">$this</span>-&gt;_get(<span class="string">'param'</span>);</div><div class="line">    $appId = C(<span class="string">'appId'</span>); <span class="comment">// config中配置</span></div><div class="line">    $appSecret = C(<span class="string">'appSecret'</span>);</div><div class="line">    $accessTokenInfo = <span class="keyword">$this</span>-&gt;getAccessToken($code, $appId, $appSecret);</div><div class="line">    $openId = $accessTokenInfo[<span class="string">'openid'</span>];</div><div class="line">    $accessToken = $accessTokenInfo[<span class="string">'access_token'</span>];</div><div class="line">    $token = <span class="keyword">$this</span>-&gt;getToken($appId, $appSecret);</div><div class="line">    $userInfo = <span class="keyword">$this</span>-&gt;getUserInfo($openId, $token[<span class="string">'access_token'</span>]);</div><div class="line">    <span class="keyword">if</span>($userInfo[<span class="string">'subscribe'</span>] == <span class="number">1</span>)&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;assign(<span class="string">'userInfo'</span>, $userInfo);</div><div class="line">        $isconcern = <span class="number">1</span>; <span class="comment">// 已关注</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        $isconcern = <span class="number">0</span>; <span class="comment">// 未关注</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">$this</span>-&gt;assign(<span class="string">'openid'</span>, $openId);</div><div class="line">    <span class="keyword">$this</span>-&gt;display(<span class="string">'page'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>此时页面上可以获取到userInfo和isconcern，isconcern为1时表示已关注公众号，否则未关注。</p><h5 id="转自-如何判断用户是否已关注公众号"><a href="#转自-如何判断用户是否已关注公众号" class="headerlink" title="[转自] 如何判断用户是否已关注公众号"></a>[转自] <a href="https://segmentfault.com/a/1190000015268145" target="_blank" rel="external">如何判断用户是否已关注公众号</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;如何判断用户是否已关注公众号&quot;&gt;&lt;a href=&quot;#如何判断用户是否已关注公众号&quot; class=&quot;headerlink&quot; title=&quot;如何判断用户是否已关注公众号&quot;&gt;&lt;/a&gt;如何判断用户是否已关注公众号&lt;/h2&gt;&lt;h2 id=&quot;一、微信公众平台配置&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="问题总结" scheme="https://github.com/stardew/categories/%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>atom</title>
    <link href="https://github.com/stardew/atom/"/>
    <id>https://github.com/stardew/atom/</id>
    <published>2018-05-27T00:00:00.000Z</published>
    <updated>2018-06-28T11:05:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Atom一个跨平台文本编辑器"><a href="#Atom一个跨平台文本编辑器" class="headerlink" title="Atom一个跨平台文本编辑器"></a>Atom一个跨平台文本编辑器</h2><p>Atom 是github专门为程序员推出的一个跨平台文本编辑器。文件太大时容易卡死，但是目前对于我们前端开发的项目还是完全可以支撑的，打开项目快的简直要飞起来（相比之前使用webstorm而言，个人不太喜欢sublime。）。安装以下一些插件后，使用起来非常酷炫。</p><p>cd ~/.atom/packages<br>apm install atom-beautify 代码格式一键美化<br>apm install language-vuejs 安装vue<br>apm install minimap  代码小地图<br>apm install tree-view-git-status 代码Git状态图标<br>apm install script 运行多种开发语言脚本<br>apm install Emmet 使用缩写语法快速编写 HTML、CSS 以及实现其他的功能<br>apm install color-picker 颜色选择器<br>apm install file-type-icons 更改左侧分级视图的文件图标和颜色<br>apm install linter-csslint css样式检测<br>apm install autocomplete-paths 自动提示文件路径<br>apm install autocomplete-paths 路径补全<br>apm install autoclose-html html 自动补全关闭标签<br>apm install activate-power-mode  这个很酷炫的，你可以试试<br>apm install language-wepy 支持wepy （微信小程序）<br>apm install sync-settings 配置你个人的 Github access token。然后在 Atom Command Palette 中输入 sync-settings:backup，会自动将 Atom 的配置备份在 gist 中</p><h5 id="转自-Atom一个跨平台文本编辑器"><a href="#转自-Atom一个跨平台文本编辑器" class="headerlink" title="[转自] Atom一个跨平台文本编辑器"></a>[转自] <a href="https://segmentfault.com/a/1190000014899093" target="_blank" rel="external">Atom一个跨平台文本编辑器</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Atom一个跨平台文本编辑器&quot;&gt;&lt;a href=&quot;#Atom一个跨平台文本编辑器&quot; class=&quot;headerlink&quot; title=&quot;Atom一个跨平台文本编辑器&quot;&gt;&lt;/a&gt;Atom一个跨平台文本编辑器&lt;/h2&gt;&lt;p&gt;Atom 是github专门为程序员推出的一
      
    
    </summary>
    
      <category term="工具类" scheme="https://github.com/stardew/categories/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
    
      <category term="tools" scheme="https://github.com/stardew/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>hexo-css-weex-document</title>
    <link href="https://github.com/stardew/hexo-css-weex-document/"/>
    <id>https://github.com/stardew/hexo-css-weex-document/</id>
    <published>2017-09-21T00:00:00.000Z</published>
    <updated>2018-06-28T11:08:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-css项目部署到github"><a href="#hexo-css项目部署到github" class="headerlink" title="hexo+css项目部署到github"></a>hexo+css项目部署到github</h1><h4 id="仿写weex使用手册"><a href="#仿写weex使用手册" class="headerlink" title="仿写weex使用手册"></a>仿写weex使用手册</h4><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>前面讲了如何使用hexo+css搭建自己的博客，今天主要是总结下如何把本地能访问的静态的博客部署到github上。以重写weex使用手册为例（不要问我为什么这么无聊，等你怀孕了就知道了）。</p><p>博客地址：<a href="https://stardew516.github.io/（迁移：https://stardew.github.io/）" target="_blank" rel="external">https://stardew516.github.io/（迁移：https://stardew.github.io/）</a><br>博客部署地址：<br><a href="https://github.com/stardew516/stardew516.github.io（https://github.com/stardew/stardew.github.io）">https://github.com/stardew516/stardew516.github.io（https://github.com/stardew/stardew.github.io）</a></p><p>博客源码地址：<a href="https://github.com/stardew516/document">https://github.com/stardew516/document</a></p><ul><li>分支master: 原本打算用来部署，后面发现不可用，弃</li><li>分支development：基础代码存放，实现本地博客</li><li>分支deploy：修改一些信息，部署到github上所用</li></ul><h2 id="二、实现"><a href="#二、实现" class="headerlink" title="二、实现"></a>二、实现</h2><h5 id="1-使用hexo-css写好一套能在本地跑通的静态博客"><a href="#1-使用hexo-css写好一套能在本地跑通的静态博客" class="headerlink" title="1. 使用hexo+css写好一套能在本地跑通的静态博客"></a>1. 使用hexo+css写好一套能在本地跑通的静态博客</h5><ul><li>可参照 <a href="https://segmentfault.com/a/1190000011020260" target="_blank" rel="external">hexo+css创建自己的blog（搭建）</a></li></ul><h5 id="2-安装-hexo-deployer-git-npm-install-hexo-deployer-git-save"><a href="#2-安装-hexo-deployer-git-npm-install-hexo-deployer-git-save" class="headerlink" title="2. 安装 hexo-deployer-git: npm install hexo-deployer-git --save"></a>2. 安装 hexo-deployer-git: <code>npm install hexo-deployer-git --save</code></h5><h5 id="3-在github上新建一个仓库，注意命名格式如下图，用户名-github-io"><a href="#3-在github上新建一个仓库，注意命名格式如下图，用户名-github-io" class="headerlink" title="3. 在github上新建一个仓库，注意命名格式如下图，用户名.github.io"></a>3. 在github上新建一个仓库，注意命名格式如下图，用户名.github.io</h5><p><img src="https://segmentfault.com/img/bVVyqc" alt="clipboard.png"></p><h5 id="4-config-yml-中配置"><a href="#4-config-yml-中配置" class="headerlink" title="4. _config.yml 中配置"></a>4. _config.yml 中配置</h5>  <figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># 部署部分的设置</span></div><div class="line"><span class="symbol">deploy:</span></div><div class="line"><span class="symbol">  type:</span> git</div><div class="line"><span class="symbol">  repo:</span> https:<span class="comment">//github.com/stardew516/stardew516.github.io.git</span></div><div class="line"><span class="symbol">  branch:</span> master</div><div class="line"><span class="symbol">  message:</span> hexo + css</div></pre></td></tr></table></figure><h5 id="5-生成文件-hexo-generate"><a href="#5-生成文件-hexo-generate" class="headerlink" title="5. 生成文件: hexo generate"></a>5. 生成文件: <code>hexo generate</code></h5><h5 id="6-部署-hexo-deploy"><a href="#6-部署-hexo-deploy" class="headerlink" title="6. 部署: hexo deploy"></a>6. 部署: <code>hexo deploy</code></h5><h5 id="7-访问-https-stardew516-github-io"><a href="#7-访问-https-stardew516-github-io" class="headerlink" title="7. 访问: https://stardew516.github.io/"></a>7. 访问: <a href="https://stardew516.github.io/" target="_blank" rel="external">https://stardew516.github.io/</a></h5><h5 id="转自-hexo-css项目部署到github（仿写weex使用手册）"><a href="#转自-hexo-css项目部署到github（仿写weex使用手册）" class="headerlink" title="[转自] hexo+css项目部署到github（仿写weex使用手册）"></a>[转自] <a href="https://segmentfault.com/a/1190000011294965" target="_blank" rel="external">hexo+css项目部署到github（仿写weex使用手册）</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo-css项目部署到github&quot;&gt;&lt;a href=&quot;#hexo-css项目部署到github&quot; class=&quot;headerlink&quot; title=&quot;hexo+css项目部署到github&quot;&gt;&lt;/a&gt;hexo+css项目部署到github&lt;/h1&gt;&lt;h4 i
      
    
    </summary>
    
      <category term="博客" scheme="https://github.com/stardew/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="blog" scheme="https://github.com/stardew/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>excel-download</title>
    <link href="https://github.com/stardew/excel-download/"/>
    <id>https://github.com/stardew/excel-download/</id>
    <published>2017-09-07T00:00:00.000Z</published>
    <updated>2018-06-28T11:06:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="纯前端实现excel表格导入导出"><a href="#纯前端实现excel表格导入导出" class="headerlink" title="纯前端实现excel表格导入导出"></a>纯前端实现excel表格导入导出</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>github: <a href="https://github.com/stardew516/xlsxDwonload">https://github.com/stardew516/xlsxDwonload</a></p><p>以往做excel表格下载功能的时候，都是后端生成好表格后，存储在某个地方，然后给前端一个链接，前端使用a标签加download下载，或者使用node。其实纯前端也是可以做表格下载的，有一个很好用的javascript插件叫js-xlsx。</p><h3 id="js-xlsx"><a href="#js-xlsx" class="headerlink" title="js-xlsx"></a>js-xlsx</h3><p>github：<a href="https://github.com/tealeg/xlsx">https://github.com/tealeg/xlsx</a><br>使用js-xlsx时，前端可以将后端返回的json数据拼接成自己需要导出的格式，下载到电脑中，完全不依赖后端。导入只需像平时一样选择文件，然后解析excel表格数据，转换成json格式。</p><p>目前js-xlsx对各浏览器的支持情况如下图所示：<br><img src="https://camo.githubusercontent.com/fd1391703fe12774261a10e488d70e69221d00fc/68747470733a2f2f73617563656c6162732e636f6d2f62726f777365722d6d61747269782f73686565746a732e737667" alt="js-xlsx兼容性"></p><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>以vue使用为例</p><ol><li>vue-cli脚手架搭好框架</li><li>安装包xlsx<code>npm install xlsx --save</code></li><li><p>代码实现（全）</p> <figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></div><div class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"index"</span> <span class="attr">v-loading.fullscreen.lock</span>=<span class="string">"fullscreenLoading"</span> <span class="attr">element-loading-text</span>=<span class="string">"拼命加载中..."</span>&gt;</span></span></div><div class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> @<span class="attr">change</span>=<span class="string">"importFile(this)"</span> <span class="attr">id</span>=<span class="string">"imFile"</span> <span class="attr">style</span>=<span class="string">"display: none"</span></span></span></div><div class="line"><span class="xml">           accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel"/&gt;</span></div><div class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"downlink"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></div><div class="line"><span class="xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"uploadFile()"</span>&gt;</span>导入<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></div><div class="line"><span class="xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"downloadFile(excelData)"</span>&gt;</span>导出<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></div><div class="line"><span class="xml">    <span class="comment">&lt;!--错误信息提示--&gt;</span></span></div><div class="line"><span class="xml">    <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">"提示"</span> <span class="attr">v-model</span>=<span class="string">"errorDialog"</span> <span class="attr">size</span>=<span class="string">"tiny"</span>&gt;</span></span></div><div class="line"><span class="xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;errorMsg&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div><div class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"footer"</span> <span class="attr">class</span>=<span class="string">"dialog-footer"</span>&gt;</span></span></div><div class="line"><span class="xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"errorDialog=false"</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></div><div class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div><div class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span></div><div class="line"><span class="xml">    <span class="comment">&lt;!--展示导入信息--&gt;</span></span></div><div class="line"><span class="xml">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">"excelData"</span> <span class="attr">tooltip-effect</span>=<span class="string">"dark"</span>&gt;</span></span></div><div class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"名称"</span> <span class="attr">prop</span>=<span class="string">"name"</span> <span class="attr">show-overflow-tooltip</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></div><div class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"分量"</span> <span class="attr">prop</span>=<span class="string">"size"</span> <span class="attr">show-overflow-tooltip</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></div><div class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"口味"</span> <span class="attr">prop</span>=<span class="string">"taste"</span> <span class="attr">show-overflow-tooltip</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></div><div class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"单价(元)"</span> <span class="attr">prop</span>=<span class="string">"price"</span> <span class="attr">show-overflow-tooltip</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></div><div class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"剩余(份)"</span> <span class="attr">prop</span>=<span class="string">"remain"</span> <span class="attr">show-overflow-tooltip</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></div><div class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span></div><div class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="xml">  // 引入xlsx</span></div><div class="line"><span class="xml">  var XLSX = require('xlsx')</span></div><div class="line"><span class="xml">  export default &#123;</span></div><div class="line"><span class="xml">    name: 'Index',</span></div><div class="line"><span class="xml">    data () &#123;</span></div><div class="line"><span class="xml">      return &#123;</span></div><div class="line"><span class="xml">        fullscreenLoading: false, // 加载中</span></div><div class="line"><span class="xml">        imFile: '', // 导入文件el</span></div><div class="line"><span class="xml">        outFile: '',  // 导出文件el</span></div><div class="line"><span class="xml">        errorDialog: false, // 错误信息弹窗</span></div><div class="line"><span class="xml">        errorMsg: '', // 错误信息内容</span></div><div class="line"><span class="xml">        excelData: [  // 测试数据</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '红烧鱼', size: '大', taste: '微辣', price: '40', remain: '100'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '麻辣小龙虾', size: '大', taste: '麻辣', price: '138', remain: '200'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '清蒸小龙虾', size: '大', taste: '清淡', price: '138', remain: '200'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '香辣小龙虾', size: '大', taste: '特辣', price: '138', remain: '200'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '十三香小龙虾', size: '大', taste: '中辣', price: '138', remain: '108'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '蒜蓉小龙虾', size: '大', taste: '中辣', price: '138', remain: '100'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '凉拌牛肉', size: '中', taste: '中辣', price: '48', remain: '60'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '虾仁寿司', size: '大', taste: '清淡', price: '29', remain: '无限'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '海苔寿司', size: '大', taste: '微辣', price: '26', remain: '无限'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '金针菇寿司', size: '大', taste: '清淡', price: '23', remain: '无限'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '泡菜寿司', size: '大', taste: '微辣', price: '24', remain: '无限'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '鳗鱼寿司', size: '大', taste: '清淡', price: '28', remain: '无限'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '肉松寿司', size: '大', taste: '清淡', price: '22', remain: '无限'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '三文鱼寿司', size: '大', taste: '清淡', price: '30', remain: '无限'</span></div><div class="line"><span class="xml">          &#125;,</span></div><div class="line"><span class="xml">          &#123;</span></div><div class="line"><span class="xml">            name: '蛋黄寿司', size: '大', taste: '清淡', price: '20', remain: '无限'</span></div><div class="line"><span class="xml">          &#125;</span></div><div class="line"><span class="xml">        ]</span></div><div class="line"><span class="xml">      &#125;</span></div><div class="line"><span class="xml">    &#125;,</span></div><div class="line"><span class="xml">    mounted () &#123;</span></div><div class="line"><span class="xml">      this.imFile = document.getElementById('imFile')</span></div><div class="line"><span class="xml">      this.outFile = document.getElementById('downlink')</span></div><div class="line"><span class="xml">    &#125;,</span></div><div class="line"><span class="xml">    methods: &#123;</span></div><div class="line"><span class="xml">      uploadFile: function () &#123; // 点击导入按钮</span></div><div class="line"><span class="xml">        this.imFile.click()</span></div><div class="line"><span class="xml">      &#125;,</span></div><div class="line"><span class="xml">      downloadFile: function (rs) &#123; // 点击导出按钮</span></div><div class="line"><span class="xml">        let data = [&#123;&#125;]</span></div><div class="line"><span class="xml">        for (let k in rs[0]) &#123;</span></div><div class="line"><span class="xml">          data[0][k] = k</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">        data = data.concat(rs)</span></div><div class="line"><span class="xml">        this.downloadExl(data, '菜单')</span></div><div class="line"><span class="xml">      &#125;,</span></div><div class="line"><span class="xml">      importFile: function () &#123; // 导入excel</span></div><div class="line"><span class="xml">        this.fullscreenLoading = true</span></div><div class="line"><span class="xml">        let obj = this.imFile</span></div><div class="line"><span class="xml">        if (!obj.files) &#123;</span></div><div class="line"><span class="xml">          this.fullscreenLoading = false</span></div><div class="line"><span class="xml">          return</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">        var f = obj.files[0]</span></div><div class="line"><span class="xml">        var reader = new FileReader()</span></div><div class="line"><span class="xml">        let $t = this</span></div><div class="line"><span class="xml">        reader.onload = function (e) &#123;</span></div><div class="line"><span class="xml">          var data = e.target.result</span></div><div class="line"><span class="xml">          if ($t.rABS) &#123;</span></div><div class="line"><span class="xml">            $t.wb = XLSX.read(btoa(this.fixdata(data)), &#123;  // 手动转化</span></div><div class="line"><span class="xml">              type: 'base64'</span></div><div class="line"><span class="xml">            &#125;)</span></div><div class="line"><span class="xml">          &#125; else &#123;</span></div><div class="line"><span class="xml">            $t.wb = XLSX.read(data, &#123;</span></div><div class="line"><span class="xml">              type: 'binary'</span></div><div class="line"><span class="xml">            &#125;)</span></div><div class="line"><span class="xml">          &#125;</span></div><div class="line"><span class="xml">          let json = XLSX.utils.sheet_to_json($t.wb.Sheets[$t.wb.SheetNames[0]])</span></div><div class="line"><span class="xml">          console.log(typeof json)</span></div><div class="line"><span class="xml">          $t.dealFile($t.analyzeData(json)) // analyzeData: 解析导入数据</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">        if (this.rABS) &#123;</span></div><div class="line"><span class="xml">          reader.readAsArrayBuffer(f)</span></div><div class="line"><span class="xml">        &#125; else &#123;</span></div><div class="line"><span class="xml">          reader.readAsBinaryString(f)</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">      &#125;,</span></div><div class="line"><span class="xml">      downloadExl: function (json, downName, type) &#123;  // 导出到excel</span></div><div class="line"><span class="xml">        let keyMap = [] // 获取键</span></div><div class="line"><span class="xml">        for (let k in json[0]) &#123;</span></div><div class="line"><span class="xml">          keyMap.push(k)</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">        console.info('keyMap', keyMap, json)</span></div><div class="line"><span class="xml">        let tmpdata = [] // 用来保存转换好的json</span></div><div class="line"><span class="xml">        json.map((v, i) =&gt; keyMap.map((k, j) =&gt; Object.assign(&#123;&#125;, &#123;</span></div><div class="line"><span class="xml">          v: v[k],</span></div><div class="line"><span class="xml">          position: (j &gt; 25 ? this.getCharCol(j) : String.fromCharCode(65 + j)) + (i + 1)</span></div><div class="line"><span class="xml">        &#125;))).reduce((prev, next) =&gt; prev.concat(next)).forEach(function (v) &#123;</span></div><div class="line"><span class="xml">          tmpdata[v.position] = &#123;</span></div><div class="line"><span class="xml">            v: v.v</span></div><div class="line"><span class="xml">          &#125;</span></div><div class="line"><span class="xml">        &#125;)</span></div><div class="line"><span class="xml">        let outputPos = Object.keys(tmpdata)  // 设置区域,比如表格从A1到D10</span></div><div class="line"><span class="xml">        let tmpWB = &#123;</span></div><div class="line"><span class="xml">          SheetNames: ['mySheet'], // 保存的表标题</span></div><div class="line"><span class="xml">          Sheets: &#123;</span></div><div class="line"><span class="xml">            'mySheet': Object.assign(&#123;&#125;,</span></div><div class="line"><span class="xml">              tmpdata, // 内容</span></div><div class="line"><span class="xml">              &#123;</span></div><div class="line"><span class="xml">                '!ref': outputPos[0] + ':' + outputPos[outputPos.length - 1] // 设置填充区域</span></div><div class="line"><span class="xml">              &#125;)</span></div><div class="line"><span class="xml">          &#125;</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">        let tmpDown = new Blob([this.s2ab(XLSX.write(tmpWB,</span></div><div class="line"><span class="xml">          &#123;bookType: (type === undefined ? 'xlsx' : type), bookSST: false, type: 'binary'&#125; // 这里的数据是用来定义导出的格式类型</span></div><div class="line"><span class="xml">        ))], &#123;</span></div><div class="line"><span class="xml">          type: ''</span></div><div class="line"><span class="xml">        &#125;)  // 创建二进制对象写入转换好的字节流</span></div><div class="line"><span class="xml">        var href = URL.createObjectURL(tmpDown)  // 创建对象超链接</span></div><div class="line"><span class="xml">        this.outFile.download = downName + '.xlsx'  // 下载名称</span></div><div class="line"><span class="xml">        this.outFile.href = href  // 绑定a标签</span></div><div class="line"><span class="xml">        this.outFile.click()  // 模拟点击实现下载</span></div><div class="line"><span class="xml">        setTimeout(function () &#123;  // 延时释放</span></div><div class="line"><span class="xml">          URL.revokeObjectURL(tmpDown) // 用URL.revokeObjectURL()来释放这个object URL</span></div><div class="line"><span class="xml">        &#125;, 100)</span></div><div class="line"><span class="xml">      &#125;,</span></div><div class="line"><span class="xml">      analyzeData: function (data) &#123;  // 此处可以解析导入数据</span></div><div class="line"><span class="xml">        return data</span></div><div class="line"><span class="xml">      &#125;,</span></div><div class="line"><span class="xml">      dealFile: function (data) &#123;   // 处理导入的数据</span></div><div class="line"><span class="xml">        console.log(data)</span></div><div class="line"><span class="xml">        this.imFile.value = ''</span></div><div class="line"><span class="xml">        this.fullscreenLoading = false</span></div><div class="line"><span class="xml">        if (data.length <span class="tag">&lt;<span class="name">=</span> <span class="attr">0</span>) &#123;</span></span></div><div class="line"><span class="xml">          this.errorDialog = true</span></div><div class="line"><span class="xml">          this.errorMsg = '请导入正确信息'</span></div><div class="line"><span class="xml">        &#125; else &#123;</span></div><div class="line"><span class="xml">          this.excelData = data</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">      &#125;,</span></div><div class="line"><span class="xml">      s2ab: function (s) &#123; // 字符串转字符流</span></div><div class="line"><span class="xml">        var buf = new ArrayBuffer(s.length)</span></div><div class="line"><span class="xml">        var view = new Uint8Array(buf)</span></div><div class="line"><span class="xml">        for (var i = 0; i !== s.length; ++i) &#123;</span></div><div class="line"><span class="xml">          view[i] = s.charCodeAt(i) &amp; 0xFF</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">        return buf</span></div><div class="line"><span class="xml">      &#125;,</span></div><div class="line"><span class="xml">      getCharCol: function (n) &#123; // 将指定的自然数转换为26进制表示。映射关系：[0-25] -&gt; [A-Z]。</span></div><div class="line"><span class="xml">        let s = ''</span></div><div class="line"><span class="xml">        let m = 0</span></div><div class="line"><span class="xml">        while (n &gt; 0) &#123;</span></div><div class="line"><span class="xml">          m = n % 26 + 1</span></div><div class="line"><span class="xml">          s = String.fromCharCode(m + 64) + s</span></div><div class="line"><span class="xml">          n = (n - m) / 26</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">        return s</span></div><div class="line"><span class="xml">      &#125;,</span></div><div class="line"><span class="xml">      fixdata: function (data) &#123;  // 文件流转BinaryString</span></div><div class="line"><span class="xml">        var o = ''</span></div><div class="line"><span class="xml">        var l = 0</span></div><div class="line"><span class="xml">        var w = 10240</span></div><div class="line"><span class="xml">        for (; l <span class="tag">&lt; <span class="attr">data.byteLength</span> / <span class="attr">w</span>; ++<span class="attr">l</span>) &#123;</span></span></div><div class="line"><span class="xml">          o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)))</span></div><div class="line"><span class="xml">        &#125;</span></div><div class="line"><span class="xml">        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)))</span></div><div class="line"><span class="xml">        return o</span></div><div class="line"><span class="xml">      &#125;</span></div><div class="line"><span class="xml">    &#125;</span></div><div class="line"><span class="xml">  &#125;</span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="xml">  .el-table th&gt;.cell &#123;</span></div><div class="line"><span class="xml">    text-align: center;</span></div><div class="line"><span class="xml">  &#125;</span></div><div class="line"><span class="xml">  .button &#123;</span></div><div class="line"><span class="xml">    margin-bottom: 20px;</span></div><div class="line"><span class="xml">  &#125;</span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></div></pre></td></tr></table></figure></li><li><p>启动项目<code>npm run dev</code></p></li></ol><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://segmentfault.com/img/bVUxSk" alt="clipboard.png"></p><h5 id="转自-纯前端实现excel表格导入导出"><a href="#转自-纯前端实现excel表格导入导出" class="headerlink" title="[转自] 纯前端实现excel表格导入导出"></a>[转自] <a href="https://segmentfault.com/a/1190000011057149" target="_blank" rel="external">纯前端实现excel表格导入导出</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;纯前端实现excel表格导入导出&quot;&gt;&lt;a href=&quot;#纯前端实现excel表格导入导出&quot; class=&quot;headerlink&quot; title=&quot;纯前端实现excel表格导入导出&quot;&gt;&lt;/a&gt;纯前端实现excel表格导入导出&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="小例子" scheme="https://github.com/stardew/categories/%E5%B0%8F%E4%BE%8B%E5%AD%90/"/>
    
    
      <category term="vue" scheme="https://github.com/stardew/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>hexo-css-issue</title>
    <link href="https://github.com/stardew/hexo-css-issue/"/>
    <id>https://github.com/stardew/hexo-css-issue/</id>
    <published>2017-09-06T00:00:00.000Z</published>
    <updated>2018-06-28T11:08:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-css遇到的unexpected-token问题"><a href="#hexo-css遇到的unexpected-token问题" class="headerlink" title="hexo+css遇到的unexpected token问题"></a>hexo+css遇到的unexpected token问题</h2><h3 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h3><p>使用hexo+css模拟实现weex文档，页面<a href="http://weex.apache.org/cn/references/migration/difference.html" target="_blank" rel="external">Weex 和 Vue 2.x 的语法差异</a>遇到问题。</p><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>新建页面，copy进去内容，hexo server运行，控制台报错：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</div><div class="line">Template render error: (unknown path) [Line 17, Column 9]</div><div class="line">  unexpected token: !</div><div class="line">    at Object.exports.prettifyError (/Users/weilu/Desktop/weilu/code/document/folder/node_modules/nunjucks/src/lib.js:34:15)</div><div class="line">    at Obj.extend.render (/Users/weilu/Desktop/weilu/code/document/folder/node_modules/nunjucks/src/environment.js:469:27)</div><div class="line">    at Obj.extend.renderString (/Users/weilu/Desktop/weilu/code/document/folder/node_modules/nunjucks/src/environment.js:327:21)</div><div class="line">    at /Users/weilu/Desktop/weilu/code/document/folder/node_modules/hexo/lib/extend/tag.js:66:9</div><div class="line">    at Promise._execute (/Users/weilu/Desktop/weilu/code/document/folder/node_modules/bluebird/js/<span class="keyword">release</span>/debuggability.js:<span class="number">300</span>:<span class="number">9</span>)</div><div class="line">    <span class="keyword">at</span> Promise._resolveFromExecutor (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">483</span>:<span class="number">18</span>)</div><div class="line">    <span class="keyword">at</span> <span class="keyword">new</span> Promise (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">79</span>:<span class="number">10</span>)</div><div class="line">    <span class="keyword">at</span> Tag.render (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/hexo/lib/extend/tag.js:<span class="number">64</span>:<span class="number">10</span>)</div><div class="line">    <span class="keyword">at</span> Object.tagFilter [<span class="keyword">as</span> onRenderEnd] (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/hexo/lib/hexo/post.js:<span class="number">266</span>:<span class="number">16</span>)</div><div class="line">    <span class="keyword">at</span> /<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/hexo/lib/hexo/render.js:<span class="number">65</span>:<span class="number">19</span></div><div class="line">    <span class="keyword">at</span> tryCatcher (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/util.js:<span class="number">16</span>:<span class="number">23</span>)</div><div class="line">    <span class="keyword">at</span> Promise._settlePromiseFromHandler (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">512</span>:<span class="number">31</span>)</div><div class="line">    <span class="keyword">at</span> Promise._settlePromise (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">569</span>:<span class="number">18</span>)</div><div class="line">    <span class="keyword">at</span> Promise._settlePromise0 (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">614</span>:<span class="number">10</span>)</div><div class="line">    <span class="keyword">at</span> Promise._settlePromises (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">693</span>:<span class="number">18</span>)</div><div class="line">    <span class="keyword">at</span> Async._drainQueue (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/async.js:<span class="number">133</span>:<span class="number">16</span>)</div><div class="line">    <span class="keyword">at</span> Async._drainQueues (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/async.js:<span class="number">143</span>:<span class="number">10</span>)</div><div class="line">    <span class="keyword">at</span> Immediate.Async.drainQueues (/<span class="keyword">Users</span>/weilu/Desktop/weilu/code/<span class="keyword">document</span>/folder/node_modules/bluebird/js/<span class="keyword">release</span>/async.js:<span class="number">17</span>:<span class="number">14</span>)</div><div class="line">    <span class="keyword">at</span> runCallback (timers.js:<span class="number">574</span>:<span class="number">20</span>)</div><div class="line">    <span class="keyword">at</span> tryOnImmediate (timers.js:<span class="number">554</span>:<span class="number">5</span>)</div><div class="line">    <span class="keyword">at</span> processImmediate [<span class="keyword">as</span> _immediateCallback] (timers.js:<span class="number">533</span>:<span class="number">5</span>)</div></pre></td></tr></table></figure></p><h3 id="定位问题"><a href="#定位问题" class="headerlink" title="定位问题"></a>定位问题</h3><p>问题定位到<code>if=&quot;&amp;#123;&amp;#123;!foo&amp;#125;&amp;#125;&quot;</code>这句文案。文档中的效果如下：</p><p><img src="https://segmentfault.com/img/bVUuMg" alt="clipboard.png"></p><h3 id="分析问题："><a href="#分析问题：" class="headerlink" title="分析问题："></a>分析问题：</h3><p>报错信息写的很明确，<code>unexpected token: !</code>，!是不被期望的。其实这是因为使用了<code>&amp;#123;&amp;#123;...&amp;#125;&amp;#125;</code>导致的，在hexo中双括号会被解析，双括号里的内容会被当做变量解析。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>以下是几种可能的解决方案</p><ol><li><p>网上找到方法说使用&#39;可以不解析&#123;&#123;，其实不然，使用&#39;后会不解析转义后的特俗字符，例如改为</p> <figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">`<span class="keyword">if</span>=<span class="string">"&amp;#125;&amp;#125;!foo&amp;#125;&amp;#125;"</span>`</div><div class="line">还是会解析，会报同样的错误，所以`包裹是不能解决问题的。</div></pre></td></tr></table></figure></li><li><p>还有的是说使用&#39;&#39;&#39;三个反引号，三个&#39;&#39;&#39;确实可以解决解析方面的问题，但是不能解决我们这里的问题，我们看文档可以知道，这句<code>if=&quot;&amp;#123;&amp;#123;!foo&amp;#125;&amp;#125;&quot;</code>是在表格中的，而&#39;&#39;&#39;生成的是代码块，所以三个反引号是不能最终解决问题的。</p></li><li><p>转义。一般很多类似<code>unexpected token: ***</code>的问题，都可以使用转义的方法解决，关于转义字符，可以看我上一篇文章<a href="https://segmentfault.com/a/1190000011021195" target="_blank" rel="external">hexo+css创建自己的blog（语法手册）</a>，里面最底下有各种特殊字符对应的转义码。以下是我解决问题的三个过程：</p> <figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">`<span class="keyword">if</span>=<span class="string">"&amp;#123;&amp;#123;!foo&amp;#125;&amp;#125;"</span>`</div><div class="line">这种方式时，`根本不会把转义过后的内容反转义回去，效果图如下图<span class="number">1</span>。</div><div class="line"></div><div class="line">图<span class="number">1</span>的效果并不是我们期望的，只是我们知道`最终在页面展示的效果是包裹在<span class="keyword">code</span>中的，所以我们可以用如下方式，效果如下图<span class="number">2</span>。</div><div class="line">&lt;<span class="keyword">code</span>&gt;<span class="keyword">if</span>=<span class="string">"&amp;#123;&amp;#123;!foo&amp;#125;&amp;#125;"</span>&lt;/<span class="keyword">code</span>&gt;</div><div class="line"></div><div class="line">图<span class="number">2</span>中可以看出，双引号变成了中文的，这也不是我们期望的，需要转义一下，改为如下方式，完美解决问题，结果如图<span class="number">3</span>。</div><div class="line">&lt;<span class="keyword">code</span>&gt;<span class="keyword">if</span>=&amp;quot;&amp;#<span class="number">123</span>;&amp;#<span class="number">123</span>;!foo&amp;#<span class="number">125</span>;&amp;#<span class="number">125</span>;&amp;quot;&lt;/<span class="keyword">code</span>&gt;</div></pre></td></tr></table></figure></li></ol><p>图1：<br><img src="https://segmentfault.com/img/bVUuEK" alt="clipboard.png"></p><p>图2：<br><img src="https://segmentfault.com/img/bVUuGL" alt="clipboard.png"></p><p>图3：<br><img src="https://segmentfault.com/img/bVUuFi" alt="clipboard.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>使用hexo创建博客写文章的时候，遇到的问题几乎都是特殊字符解析方面的问题，所以应该尽可能少写一些特殊字符，如果实在需要，可以使用转义码。遇到问题时，解决思路可以考虑下转义码+html标签。</p><h5 id="转自-hexo-css遇到的unexpected-token问题"><a href="#转自-hexo-css遇到的unexpected-token问题" class="headerlink" title="[转自] hexo+css遇到的unexpected token问题"></a>[转自] <a href="https://segmentfault.com/a/1190000011042242" target="_blank" rel="external">hexo+css遇到的unexpected token问题</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo-css遇到的unexpected-token问题&quot;&gt;&lt;a href=&quot;#hexo-css遇到的unexpected-token问题&quot; class=&quot;headerlink&quot; title=&quot;hexo+css遇到的unexpected token问题&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="博客" scheme="https://github.com/stardew/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="blog" scheme="https://github.com/stardew/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>hexo-css-build</title>
    <link href="https://github.com/stardew/hexo-css-build/"/>
    <id>https://github.com/stardew/hexo-css-build/</id>
    <published>2017-09-05T00:00:00.000Z</published>
    <updated>2018-06-28T11:07:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-css创建自己的blog（搭建）"><a href="#hexo-css创建自己的blog（搭建）" class="headerlink" title="hexo+css创建自己的blog（搭建）"></a>hexo+css创建自己的blog（搭建）</h1><h2 id="一、什么是hexo"><a href="#一、什么是hexo" class="headerlink" title="一、什么是hexo"></a>一、什么是hexo</h2><p>Hexo是一个快速、简洁且高效的博客框架，使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。目前比较火的vue和weex的文档都是使用hexo框架实现的。</p><h2 id="二、hexo的安装"><a href="#二、hexo的安装" class="headerlink" title="二、hexo的安装"></a>二、hexo的安装</h2><p>安装hexo前，确保电脑中已经安装了node和git。</p><h3 id="node安装"><a href="#node安装" class="headerlink" title="node安装"></a>node安装</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">方法一、</div><div class="line">    直接安装<span class="keyword">node</span><span class="title">：ruby</span> -e <span class="string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></div><div class="line">方法二、</div><div class="line">    先安装homebrew： /usr/bin/ruby -e <span class="string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></div><div class="line">    后安装<span class="keyword">node</span><span class="title">：brew</span> install <span class="keyword">node</span><span class="title"></span></div></pre></td></tr></table></figure><h3 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">先安装homebrew： /usr/<span class="keyword">bin/ruby </span>-e <span class="string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></div><div class="line">后安装git：<span class="keyword">brew </span>install git</div></pre></td></tr></table></figure><h3 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-<span class="keyword">cli</span></div></pre></td></tr></table></figure><h2 id="三、创建项目"><a href="#三、创建项目" class="headerlink" title="三、创建项目"></a>三、创建项目</h2><ol><li>新建项目: <code>hexo init folder</code></li><li>进入: <code>cd folder&gt;</code></li><li>安装依赖包: <code>npm install</code></li><li>新建一篇文章: <code>hexo new iOS-APIs</code> (文件会在/source/_posts下)</li><li>启动: <code>hexo server</code></li><li>浏览器打开: <code>http://localhost:4000/document/</code></li></ol><h2 id="四、hexo配置"><a href="#四、hexo配置" class="headerlink" title="四、hexo配置"></a>四、hexo配置</h2><p>配置文件为_config.yml<br>参考: <a href="https://hexo.io/docs/configuration.html" target="_blank" rel="external">https://hexo.io/docs/configuration.html</a><br>github: <a href="https://github.com/hexojs/hexo/">https://github.com/hexojs/hexo/</a></p><h3 id="Site-（网站）"><a href="#Site-（网站）" class="headerlink" title="Site （网站）"></a>Site （网站）</h3><ol><li>网站标题<br>title: weex使用手册</li><li>网站副标题<br>subtitle: weex中文手册</li><li>网站描述<br>description: 整理weex手册, 包括通用特性, 内建组件, 内建模块, CSS 单位, 通用事件, Native DOM APIs, Weex 实例变量, Web 标准, JS Service, Vue, 高阶知识, 迁移</li><li>作者名字<br>author: stardew</li><li>网站使用的语言<br>language: 简体中文</li><li>网站时区Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。<br>timezone: UTC</li></ol><h3 id="URL-（网址）"><a href="#URL-（网址）" class="headerlink" title="URL （网址）"></a>URL （网址）</h3><p>如果您的网站存放在子目录中，例如 <a href="http://yoursite.com/blog，则请将您的" target="_blank" rel="external">http://yoursite.com/blog，则请将您的</a> url 设为 <a href="http://yoursite.com/blog" target="_blank" rel="external">http://yoursite.com/blog</a> 并把 root 设为 /blog/。</p><ol><li>网址<br>url: <a href="https://github.com/stardew516/document">https://github.com/stardew516/document</a></li><li>网站根目录<br>root: /document/</li><li>文章的 永久链接 格式<br>permalink: :year/:month/:day/:title/</li><li>永久链接中各部分的默认值<br>permalink_defaults:</li></ol><h3 id="Directory-（目录）"><a href="#Directory-（目录）" class="headerlink" title="Directory （目录）"></a>Directory （目录）</h3><ol><li>资源文件夹，这个文件夹用来存放内容。<br>source_dir: source</li><li>公共文件夹，这个文件夹用于存放生成的站点文件。<br>public_dir: public</li><li>标签文件夹<br>tag_dir: tags</li><li>归档文件夹<br>archive_dir: archives</li><li>分类文件夹<br>category_dir: categories</li><li>Include code 文件夹<br>code_dir: downloads/code</li><li>国际化（i18n）文件夹<br>i18n_dir: :lang</li><li>跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。<br>skip_render:</li></ol><h3 id="Writing-（文章）"><a href="#Writing-（文章）" class="headerlink" title="Writing （文章）"></a>Writing （文章）</h3><ol><li>新建文章的文件名称<br>new_post_name: :title.md</li><li>预设布局<br>default_layout: post</li><li>在中文和英文之间加入空格<br>auto_spacing: false</li><li>把标题转换为 title case<br>titlecase: false</li><li>在新标签中打开链接<br>external_link: true</li><li>把文件名称转换为 (1) 小写或 (2) 大写<br>filename_case: 0</li><li>显示草稿<br>render_drafts: false</li><li>启动 Asset 文件夹<br>post_asset_folder: true</li><li>把链接改为与根目录的相对位址<br>relative_link: false</li><li>显示未来的文章<br>future: true</li><li>代码块的设置<br>highlight:<br>  enable: true<br>  line_number: true<br>  auto_detect: true<br>  tab_replace:</li></ol><h3 id="Home-page-setting-（主页设置）"><a href="#Home-page-setting-（主页设置）" class="headerlink" title="Home page setting （主页设置）"></a>Home page setting （主页设置）</h3><pre><code>1. path: 博客索引页的跟路径,默认为空2. per_page: 每页展示的文章量, 为0时表示不分页3. order_by: 排序, 默认日期降序index_generator:  path: &apos;&apos;  per_page: 10  order_by: -date</code></pre><h3 id="Category-amp-Tag-（分类-amp-标签）"><a href="#Category-amp-Tag-（分类-amp-标签）" class="headerlink" title="Category &amp; Tag （分类 &amp; 标签）"></a>Category &amp; Tag （分类 &amp; 标签）</h3><ol><li>默认分类<br>default_category: uncategorized</li><li>分类别名<br>category_map:</li><li>标签别名<br>tag_map:</li></ol><h3 id="Date-Time-format-（日期-时间格式）"><a href="#Date-Time-format-（日期-时间格式）" class="headerlink" title="Date / Time format （日期 / 时间格式）"></a>Date / Time format （日期 / 时间格式）</h3><p>hexo使用Moment.js来解析和显示时间。<br>可以参照<a href="http://momentjs.com/docs/#/displaying/format/来自定义日期格式。" target="_blank" rel="external">http://momentjs.com/docs/#/displaying/format/来自定义日期格式。</a></p><ol><li>日期格式<br>date_format: YYYY-MM-DD</li><li>时间格式<br>time_format: HH:mm:ss</li></ol><h3 id="Pagination-（分页）"><a href="#Pagination-（分页）" class="headerlink" title="Pagination （分页）"></a>Pagination （分页）</h3><ol><li>每页显示的文章量 (0 = 关闭分页功能)<br>per_page: 10</li><li>分页目录<br>pagination_dir: page</li></ol><h3 id="Extensions-（扩展）"><a href="#Extensions-（扩展）" class="headerlink" title="Extensions （扩展）"></a>Extensions （扩展）</h3><p>插件: <a href="https://hexo.io/plugins/" target="_blank" rel="external">https://hexo.io/plugins/</a><br>主题: <a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></p><ol><li>当前主题名称。值为false时禁用主题<br>theme: landscape</li></ol><h3 id="Deployment-（部署）"><a href="#Deployment-（部署）" class="headerlink" title="Deployment （部署）"></a>Deployment （部署）</h3><p>参考: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">https://hexo.io/docs/deployment.html</a></p><ol><li>部署部分的配置<br> deploy:<br>   type: git<br>   repo: <a href="https://github.com/stardew516/document">https://github.com/stardew516/document</a><br>   branch: master<br>   message: hexo + css</li></ol><h2 id="五、部署"><a href="#五、部署" class="headerlink" title="五、部署"></a>五、部署</h2><p>github上部署:</p><ol><li>安装hexo-deployer-git: <code>npm install hexo-deployer-git --save</code></li><li><p>_config.yml 中配置</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># 部署部分的设置</span></div><div class="line"><span class="symbol">deploy:</span></div><div class="line"><span class="symbol">  type:</span> git</div><div class="line"><span class="symbol">  repo:</span> https:<span class="comment">//github.com/stardew516/document</span></div><div class="line"><span class="symbol">  branch:</span> master</div><div class="line"><span class="symbol">  message:</span> hexo + css</div></pre></td></tr></table></figure></li><li><p>终端进入目录,运行: <code>hexo deploy</code></p></li></ol><h5 id="转自-hexo-css创建自己的blog（搭建）"><a href="#转自-hexo-css创建自己的blog（搭建）" class="headerlink" title="[转自] hexo+css创建自己的blog（搭建）"></a>[转自] <a href="https://segmentfault.com/a/1190000011020260" target="_blank" rel="external">hexo+css创建自己的blog（搭建）</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo-css创建自己的blog（搭建）&quot;&gt;&lt;a href=&quot;#hexo-css创建自己的blog（搭建）&quot; class=&quot;headerlink&quot; title=&quot;hexo+css创建自己的blog（搭建）&quot;&gt;&lt;/a&gt;hexo+css创建自己的blog（搭建）&lt;/
      
    
    </summary>
    
      <category term="博客" scheme="https://github.com/stardew/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="blog" scheme="https://github.com/stardew/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>hexo-css-document</title>
    <link href="https://github.com/stardew/hexo-css-document/"/>
    <id>https://github.com/stardew/hexo-css-document/</id>
    <published>2017-09-05T00:00:00.000Z</published>
    <updated>2018-06-28T11:08:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo语法使用手册"><a href="#hexo语法使用手册" class="headerlink" title="hexo语法使用手册"></a>hexo语法使用手册</h2><p>注意：因语法问题，有些hexo的效果在segmentfault中无法正常显示。</p><h3 id="1-列表"><a href="#1-列表" class="headerlink" title="1. 列表"></a>1. 列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">有序号:</div><div class="line"><span class="bullet">1. </span>第一点</div><div class="line"><span class="bullet">2. </span>第二点</div><div class="line"><span class="bullet">3. </span>第三点</div><div class="line"></div><div class="line">无序号:</div><div class="line"><span class="bullet">* </span>星号列表</div><div class="line"><span class="bullet">+ </span>加号列表</div><div class="line"><span class="bullet">- </span>减号列表</div></pre></td></tr></table></figure><p>效果:</p><ol><li>第一点</li><li>第二点</li><li>第三点</li></ol><ul><li>星号列表</li></ul><ul><li>加号列表</li></ul><ul><li>减号列表</li></ul><h3 id="2-块注释"><a href="#2-块注释" class="headerlink" title="2. 块注释"></a>2. 块注释</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;</span><span class="bash"> 区块引用</span></div><div class="line"></div><div class="line">或者:</div><div class="line">&#123;% blockquote %&#125;</div><div class="line">普通的引用</div><div class="line">&#123;% endblockquote %&#125;</div><div class="line"></div><div class="line">嵌套引用</div><div class="line"><span class="meta">&gt;</span><span class="bash"> 一层引用</span></div><div class="line"><span class="meta">&gt;</span><span class="bash">&gt; 两层引用</span></div></pre></td></tr></table></figure><p>效果:</p><blockquote><p>区块引用</p></blockquote><p>注：blockquote效果不显示<br><blockquote><p>普通的引用<br>下一行</p></blockquote></p><blockquote><p>一层引用</p><blockquote><p>两层引用</p></blockquote></blockquote><h3 id="3-分割线"><a href="#3-分割线" class="headerlink" title="3. 分割线"></a>3. 分割线</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">**<span class="strong">*</span></div><div class="line"><span class="strong">---</span></div></pre></td></tr></table></figure><p>效果:</p><h2 id=""><a href="#" class="headerlink" title="*"></a><em>*</em></h2><h3 id="4-链接"><a href="#4-链接" class="headerlink" title="4. 链接"></a>4. 链接</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="string">这是一个绝对路径的链接</span>](<span class="link">https://hexo.io/zh-cn/docs/writing.html</span>)</div><div class="line">[<span class="string">这是一个相对路径的链接</span>](<span class="link">/document/2017/08/07/hello-world/</span>)</div><div class="line">&#123;% link text url [external] [title] %&#125;</div><div class="line">你好,我是&#123;% link 百度 https://www.baidu.com/ 搜索  度娘 %&#125;.</div></pre></td></tr></table></figure><p>效果：<br><a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">这是一个绝对路径的链接</a><br><a href="/document/2017/08/07/hello-world/">这是一个相对路径的链接</a></p><p>注：效果不显示<br>你好,我是<a href="https://www.baidu.com/" title="搜索 度娘" target="_blank" rel="external">百度</a>.</p><h3 id="5-加粗"><a href="#5-加粗" class="headerlink" title="5. 加粗"></a>5. 加粗</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="strong">**双星加粗**</span></div><div class="line"><span class="strong">__双下划线加粗__</span></div></pre></td></tr></table></figure><p>效果：<br><strong>双星加粗</strong><br><strong>双下划线加粗</strong></p><h3 id="6-斜体"><a href="#6-斜体" class="headerlink" title="6. 斜体"></a>6. 斜体</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">*星号斜体*</div><div class="line"><span class="keyword">_</span>下划线斜体<span class="keyword">_</span></div></pre></td></tr></table></figure><p>效果：<br><em>星号斜体</em><br><em>下划线斜体</em></p><h3 id="7-图片"><a href="#7-图片" class="headerlink" title="7. 图片"></a>7. 图片</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">![<span class="string">图1. 我最爱的炮兵</span>](<span class="link">/document/assert/img.jpg "Title"</span>)</div><div class="line"></div><div class="line">![<span class="string">图2. 我的头像</span>](<span class="link">https://sfault-avatar.b0.upaiyun.com/267/966/2679662993-581186b9d2f8a_big64 "Title"</span>)</div><div class="line"></div><div class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</div><div class="line"></div><div class="line">&#123;% img [box-model] http://weex.apache.org/cn/references/images/css-boxmodel.png 377 340 weex 盒模型 %&#125;</div></pre></td></tr></table></figure><p>效果：<br><img src="/document/assert/img.jpg" alt="图1. 我最爱的炮兵" title="Title"></p><p><img src="https://sfault-avatar.b0.upaiyun.com/267/966/2679662993-581186b9d2f8a_big64" alt="图2. 我的头像" title="Title"></p><p>注：效果不显示<br><img src="http://weex.apache.org/cn/references/images/css-boxmodel.png" class="[box-model]" width="377" height="340" title="weex 盒模型"></p><h3 id="8-代码"><a href="#8-代码" class="headerlink" title="8. 代码"></a>8. 代码</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">多行代码块使用三个`</div><div class="line">单行代码使用一个`</div><div class="line">console.log(<span class="string">'hello world!'</span>)</div></pre></td></tr></table></figure><h3 id="9-标题"><a href="#9-标题" class="headerlink" title="9. 标题"></a>9. 标题</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">方法<span class="number">1</span>: - 和 = (任何数量等效)</div><div class="line">一级标题</div><div class="line">===</div><div class="line">二级标题</div><div class="line">---</div><div class="line"></div><div class="line">方法<span class="number">2</span>: #</div><div class="line"># 一级 H1</div><div class="line">## 二级 H2</div><div class="line">### 三级 H3</div><div class="line">#### 四级 H4</div><div class="line">##### 五级 H5</div><div class="line">###### 六级 H6</div></pre></td></tr></table></figure><p>效果：<br>方法1: - 和 =</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>方法2: #</p><h1 id="一级"><a href="#一级" class="headerlink" title="一级"></a>一级</h1><h2 id="二级"><a href="#二级" class="headerlink" title="二级"></a>二级</h2><h3 id="三级"><a href="#三级" class="headerlink" title="三级"></a>三级</h3><h4 id="四级"><a href="#四级" class="headerlink" title="四级"></a>四级</h4><h5 id="五级"><a href="#五级" class="headerlink" title="五级"></a>五级</h5><h6 id="六级"><a href="#六级" class="headerlink" title="六级"></a>六级</h6><h3 id="10-jsfiddle"><a href="#10-jsfiddle" class="headerlink" title="10. jsfiddle"></a>10. jsfiddle</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% jsfiddle shorttag <span class="string">[tabs]</span> <span class="string">[skin]</span> <span class="string">[width]</span> <span class="string">[height]</span> %&#125;</div><div class="line"></div><div class="line">&#123;% jsfiddle stardew/ffnm6Lsd/<span class="number">1</span>/ %&#125;  点击左上角fiddles</div></pre></td></tr></table></figure><p>注：效果不显示<br><iframe scrolling="no" width="100%" height="300" src="//jsfiddle.net/stardew/ffnm6Lsd/1//embedded/js,resources,html,css,result/light" frameborder="0" allowfullscreen></iframe></p><h3 id="11-iframe"><a href="#11-iframe" class="headerlink" title="11. iframe"></a>11. iframe</h3><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% iframe url [width] [height] %&#125;</div><div class="line"></div><div class="line">&#123;% iframe https://www.baidu.com/ <span class="number">500</span> <span class="number">300</span> %&#125;</div></pre></td></tr></table></figure><p>注：效果不显示<br><iframe src="https://www.baidu.com/" width="500" height="300" frameborder="0" allowfullscreen></iframe></p><h3 id="12-表格"><a href="#12-表格" class="headerlink" title="12. 表格"></a>12. 表格</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">左左中右对齐</div><div class="line"></div><div class="line"></div><div class="line">dog |<span class="string"> bird </span>|<span class="string"> cat</span></div><div class="line"><span class="string">--- </span>|<span class="string"> ---- </span>|<span class="string"> ---</span></div><div class="line"><span class="string">foo </span>|<span class="string"> foo  </span>|<span class="string"> foo</span></div><div class="line"><span class="string">bar </span>|<span class="string"> bar  </span>|<span class="string"> bar</span></div><div class="line"><span class="string">baz </span>|<span class="string"> baz  </span>|<span class="string"> baz</span></div><div class="line"></div><div class="line"><span class="string">dog </span>|<span class="string"> bird </span>|<span class="string"> cat</span></div><div class="line"><span class="string">:---- </span>|<span class="string"> :---- </span>|<span class="string"> :----</span></div><div class="line"><span class="string">foo </span>|<span class="string"> foo  </span>|<span class="string"> foo</span></div><div class="line"><span class="string">bar </span>|<span class="string"> bar  </span>|<span class="string"> bar</span></div><div class="line"><span class="string">baz </span>|<span class="string"> baz  </span>|<span class="string"> baz</span></div><div class="line"></div><div class="line"><span class="string">dog </span>|<span class="string"> bird </span>|<span class="string"> cat</span></div><div class="line"><span class="string">:----: </span>|<span class="string"> :----: </span>|<span class="string"> :----:</span></div><div class="line"><span class="string">foo </span>|<span class="string"> foo  </span>|<span class="string"> foo</span></div><div class="line"><span class="string">bar </span>|<span class="string"> bar  </span>|<span class="string"> bar</span></div><div class="line"><span class="string">baz </span>|<span class="string"> baz  </span>|<span class="string"> baz</span></div><div class="line"></div><div class="line"><span class="string">dog </span>|<span class="string"> bird </span>|<span class="string"> cat</span></div><div class="line"><span class="string">----: </span>|<span class="string"> ----: </span>|<span class="string"> ----:</span></div><div class="line"><span class="string">foo </span>|<span class="string"> foo  </span>|<span class="string"> foo</span></div><div class="line"><span class="string">bar </span>|<span class="string"> bar  </span>|<span class="string"> bar</span></div><div class="line"><span class="string">baz </span>|<span class="string"> baz  </span>|<span class="string"> baz</span></div></pre></td></tr></table></figure><table><thead><tr><th>dog</th><th>bird</th><th>cat</th></tr></thead><tbody><tr><td>foo</td><td>foo</td><td>foo</td></tr><tr><td>bar</td><td>bar</td><td>bar</td></tr><tr><td>baz</td><td>baz</td><td>baz</td></tr></tbody></table><table><thead><tr><th style="text-align:left">dog</th><th style="text-align:left">bird</th><th style="text-align:left">cat</th></tr></thead><tbody><tr><td style="text-align:left">foo</td><td style="text-align:left">foo</td><td style="text-align:left">foo</td></tr><tr><td style="text-align:left">bar</td><td style="text-align:left">bar</td><td style="text-align:left">bar</td></tr><tr><td style="text-align:left">baz</td><td style="text-align:left">baz</td><td style="text-align:left">baz</td></tr></tbody></table><table><thead><tr><th style="text-align:center">dog</th><th style="text-align:center">bird</th><th style="text-align:center">cat</th></tr></thead><tbody><tr><td style="text-align:center">foo</td><td style="text-align:center">foo</td><td style="text-align:center">foo</td></tr><tr><td style="text-align:center">bar</td><td style="text-align:center">bar</td><td style="text-align:center">bar</td></tr><tr><td style="text-align:center">baz</td><td style="text-align:center">baz</td><td style="text-align:center">baz</td></tr></tbody></table><table><thead><tr><th style="text-align:right">dog</th><th style="text-align:right">bird</th><th style="text-align:right">cat</th></tr></thead><tbody><tr><td style="text-align:right">foo</td><td style="text-align:right">foo</td><td style="text-align:right">foo</td></tr><tr><td style="text-align:right">bar</td><td style="text-align:right">bar</td><td style="text-align:right">bar</td></tr><tr><td style="text-align:right">baz</td><td style="text-align:right">baz</td><td style="text-align:right">baz</td></tr></tbody></table><h3 id="13-原生代码"><a href="#13-原生代码" class="headerlink" title="13. 原生代码"></a>13. 原生代码</h3><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">raw</span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">content</span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endraw</span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml">或者直接</span></div><div class="line"><span class="xml">content</span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"color-box"</span> <span class="attr">style</span>=<span class="string">"background:#FF00FF;color:#FF00FF"</span>&gt;</span> yy <span class="tag">&lt;/<span class="name">span</span>&gt;</span> #FF00FF</span></div></pre></td></tr></table></figure><p>注：效果不显示<br><span class="color-box" style="background:#FF00FF;color:#FF00FF"> yy </span> #FF00FF</p><h3 id="14-转义"><a href="#14-转义" class="headerlink" title="14. 转义"></a>14. 转义</h3><table><thead><tr><th style="text-align:left">符号</th><th style="text-align:left">转义</th></tr></thead><tbody><tr><td style="text-align:left">&#33;</td><td style="text-align:left"><code>&amp;#33;</code></td></tr><tr><td style="text-align:left">&#34;</td><td style="text-align:left"><code>&amp;#34;</code> 或 <code>&amp;quot;</code></td></tr><tr><td style="text-align:left">&#35;</td><td style="text-align:left"><code>&amp;#35;</code></td></tr><tr><td style="text-align:left">&#36;</td><td style="text-align:left"><code>&amp;#36;</code></td></tr><tr><td style="text-align:left">&#37;</td><td style="text-align:left"><code>&amp;#37;</code></td></tr><tr><td style="text-align:left">&#38;</td><td style="text-align:left"><code>&amp;#38;</code> 或 <code>&amp;amp;</code></td></tr><tr><td style="text-align:left">&#39;</td><td style="text-align:left"><code>&amp;#39;</code></td></tr><tr><td style="text-align:left">&#40;</td><td style="text-align:left"><code>&amp;#40;</code></td></tr><tr><td style="text-align:left">&#41;</td><td style="text-align:left"><code>&amp;#41;</code></td></tr><tr><td style="text-align:left">&#42;</td><td style="text-align:left"><code>&amp;#42;</code></td></tr><tr><td style="text-align:left">&#43;</td><td style="text-align:left"><code>&amp;#43;</code></td></tr><tr><td style="text-align:left">&#60;</td><td style="text-align:left"><code>&amp;#60;</code> 或 <code>&amp;lt;</code></td></tr><tr><td style="text-align:left">&#61;</td><td style="text-align:left"><code>&amp;#61;</code></td></tr><tr><td style="text-align:left">&#62;</td><td style="text-align:left"><code>&amp;#62;</code> 或 <code>&amp;gt;</code></td></tr><tr><td style="text-align:left">&#63;</td><td style="text-align:left"><code>&amp;#63;</code></td></tr><tr><td style="text-align:left">&#64;</td><td style="text-align:left"><code>&amp;#64;</code></td></tr><tr><td style="text-align:left">&#91;</td><td style="text-align:left"><code>&amp;#91;</code></td></tr><tr><td style="text-align:left">&#92;</td><td style="text-align:left"><code>&amp;#92;</code></td></tr><tr><td style="text-align:left">&#93;</td><td style="text-align:left"><code>&amp;#93;</code></td></tr><tr><td style="text-align:left">&#123;</td><td style="text-align:left"><code>&amp;#123;</code></td></tr><tr><td style="text-align:left">&#124;</td><td style="text-align:left"><code>&amp;#124;</code></td></tr><tr><td style="text-align:left">&#125;</td><td style="text-align:left"><code>&amp;#125;</code></td></tr></tbody></table><h5 id="转自-hexo-css创建自己的blog（语法手册）"><a href="#转自-hexo-css创建自己的blog（语法手册）" class="headerlink" title="[转自] hexo+css创建自己的blog（语法手册）"></a>[转自] <a href="https://segmentfault.com/a/1190000011021195" target="_blank" rel="external">hexo+css创建自己的blog（语法手册）</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo语法使用手册&quot;&gt;&lt;a href=&quot;#hexo语法使用手册&quot; class=&quot;headerlink&quot; title=&quot;hexo语法使用手册&quot;&gt;&lt;/a&gt;hexo语法使用手册&lt;/h2&gt;&lt;p&gt;注意：因语法问题，有些hexo的效果在segmentfault中无法正常显示
      
    
    </summary>
    
      <category term="博客" scheme="https://github.com/stardew/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="blog" scheme="https://github.com/stardew/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>vueresource-405</title>
    <link href="https://github.com/stardew/vueresource-405/"/>
    <id>https://github.com/stardew/vueresource-405/</id>
    <published>2017-07-25T00:00:00.000Z</published>
    <updated>2018-06-28T11:13:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-resource报错450的解决方案"><a href="#vue-resource报错450的解决方案" class="headerlink" title="vue-resource报错450的解决方案"></a>vue-resource报错450的解决方案</h1><p>vue-resource(github)地址：<a href="https://github.com/pagekit/vue-resource">https://github.com/pagekit/vue-resource</a></p><h2 id="一、基本使用"><a href="#一、基本使用" class="headerlink" title="一、基本使用"></a>一、基本使用</h2><h5 id="1-页面引入"><a href="#1-页面引入" class="headerlink" title="1.页面引入"></a>1.页面引入</h5><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> vueResource <span class="keyword">from</span> <span class="string">'vue-resource'</span></div><div class="line">Vue.use(vueResource)</div></pre></td></tr></table></figure><h5 id="2-调取接口"><a href="#2-调取接口" class="headerlink" title="2. 调取接口"></a>2. 调取接口</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Vue.http.post(url, &#123;</div><div class="line">  <span class="string">'data1'</span>: data1,</div><div class="line">  <span class="string">'data2'</span>: <span class="string">'data2'</span></div><div class="line">&#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'success'</span>, response)</div><div class="line">&#125;, <span class="function"><span class="params">response</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'error'</span>, response)</div><div class="line">&#125;)</div></pre></td></tr></table></figure><h2 id="二、报错450"><a href="#二、报错450" class="headerlink" title="二、报错450"></a>二、报错450</h2><p>定位错误信息：请求header没有完全一一对应。<code>Content-Type: application/x-www-form-urlencoded; charset=UTF-8</code>应为<code>Content-Type: application/json; charset=UTF-8</code>，检查页面代码，发现已经设置了<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Vue<span class="selector-class">.http</span><span class="selector-class">.interceptors</span><span class="selector-class">.push</span>(function (request, next) &#123;</div><div class="line">  request<span class="selector-class">.headers</span><span class="selector-class">.set</span>(<span class="string">'Content-Type'</span>, <span class="string">'application/json; charset=UTF-8'</span>)</div><div class="line">  request<span class="selector-class">.headers</span><span class="selector-class">.set</span>(<span class="string">'Content-Type'</span>, <span class="string">'application/json'</span>)</div><div class="line">  next()</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p>只是页面没有起作用而已，那究竟是什么原因导致页面设置的Content-Type失效了呢？继续追溯，发现跟这行代码有关<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Vue.http.options.crossOrigin = true </span></div><div class="line"><span class="comment">// Vue.http.options.emulateHTTP = true</span></div><div class="line">Vue<span class="selector-class">.http</span><span class="selector-class">.options</span><span class="selector-class">.emulateJSON</span> = true <span class="comment">//（跟这行代码有关）</span></div></pre></td></tr></table></figure></p><h2 id="三、分析"><a href="#三、分析" class="headerlink" title="三、分析"></a>三、分析</h2><p>下面分别来讲一下这几行代码的用处，以及emulateJSON是怎么影响到Content-Type设置的。</p><h5 id="1-Vue-http-options-crossOrigin"><a href="#1-Vue-http-options-crossOrigin" class="headerlink" title="1. Vue.http.options.crossOrigin"></a>1. Vue.http.options.crossOrigin</h5><p>这个很明显是设置跨域的，此处不多讲。</p><h5 id="2-Vue-http-options-emulateHTTP"><a href="#2-Vue-http-options-emulateHTTP" class="headerlink" title="2. Vue.http.options.emulateHTTP"></a>2. Vue.http.options.emulateHTTP</h5><p>参考地址：<a href="https://github.com/pagekit/vue-resource/blob/develop/src/http/interceptor/method.js">https://github.com/pagekit/vue-resource/blob/develop/src/http/interceptor/method.js</a><br>摘出源码<br><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * HTTP method override Interceptor.</div><div class="line"> */</div><div class="line"></div><div class="line">export <span class="keyword">default</span> <span class="keyword">function</span> (<span class="built_in">request</span>, <span class="keyword">next</span>) &#123;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="built_in">request</span>.emulateHTTP &amp;&amp; /^(PUT|PATCH|DELETE)$/i.test(<span class="built_in">request</span>.method)) &#123;</div><div class="line">        <span class="built_in">request</span>.headers.<span class="keyword">set</span>(<span class="comment">'X-HTTP-Method-Override', request.method);</span></div><div class="line">        <span class="built_in">request</span>.method = <span class="comment">'POST';</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">next</span>();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>大概的意思就是如果请求方式为PUT|PATCH|DELETE，服务器又没法处理这几类请求的时候，设置<code>Vue.http.options.emulateHTTP = true</code>的话可以将X-HTTP-Method-Override设置为PUT|PATCH|DELETE，然后使用普通的post进行请求。<br>关于X-HTTP-Method-Override讲一下，它的使用场景是：<br>在某些HTTP代理不支持类似PUT|PATCH|DELETE这些类型HTTP请求的情况下，可以通过另一种完全违背协议的HTTP方法来”代理”。这种协议就是，使客户端发出HTTP POST请求并设置header里X-HTTP-Method-Override值为PUT|PATCH|DELETE。</p><h5 id="3-Vue-http-options-emulateJSON"><a href="#3-Vue-http-options-emulateJSON" class="headerlink" title="3. Vue.http.options.emulateJSON"></a>3. Vue.http.options.emulateJSON</h5><p>参考地址：<a href="https://github.com/pagekit/vue-resource/blob/develop/src/http/interceptor/form.js">https://github.com/pagekit/vue-resource/blob/develop/src/http/interceptor/form.js</a><br>摘出源码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Form data Interceptor.</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> Url <span class="keyword">from</span> <span class="string">'../../url/index'</span>;</div><div class="line"><span class="keyword">import</span> &#123; isObject, isFormData &#125; <span class="keyword">from</span> <span class="string">'../../util'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">request, next</span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (isFormData(request.body)) &#123;</div><div class="line"></div><div class="line">        request.headers.delete(<span class="string">'Content-Type'</span>);</div><div class="line"></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isObject(request.body) &amp;&amp; request.emulateJSON) &#123;</div><div class="line"></div><div class="line">        request.body = Url.params(request.body);</div><div class="line">        request.headers.set(<span class="string">'Content-Type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    next();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>从第17行可以看到，如果设置了emulateJSON的话会默认加上这句<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">request.headers.set(<span class="symbol">'Content</span>-<span class="keyword">Type</span>', <span class="symbol">'application</span>/x-www-form-urlencoded');</div></pre></td></tr></table></figure></p><p>这就是为什么我们设置的Content-Type失效了。只要去掉Vue.http.options.emulateHTTP = true 或者直接置为false就可以了。</p><h5 id="转自-vue-resource报错450的解决方案"><a href="#转自-vue-resource报错450的解决方案" class="headerlink" title="[转自] vue-resource报错450的解决方案"></a>[转自] <a href="https://segmentfault.com/a/1190000010321126" target="_blank" rel="external">vue-resource报错450的解决方案</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vue-resource报错450的解决方案&quot;&gt;&lt;a href=&quot;#vue-resource报错450的解决方案&quot; class=&quot;headerlink&quot; title=&quot;vue-resource报错450的解决方案&quot;&gt;&lt;/a&gt;vue-resource报错450的解决
      
    
    </summary>
    
      <category term="问题总结" scheme="https://github.com/stardew/categories/%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="vue" scheme="https://github.com/stardew/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>weex-start</title>
    <link href="https://github.com/stardew/weex-start/"/>
    <id>https://github.com/stardew/weex-start/</id>
    <published>2017-07-24T00:00:00.000Z</published>
    <updated>2018-06-28T11:14:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的weex开发之路"><a href="#我的weex开发之路" class="headerlink" title="我的weex开发之路"></a>我的weex开发之路</h1><h5 id="认识比较浅薄，单纯从使用方面入手，整理了两个半小时，有错误的地方还请指出。"><a href="#认识比较浅薄，单纯从使用方面入手，整理了两个半小时，有错误的地方还请指出。" class="headerlink" title="认识比较浅薄，单纯从使用方面入手，整理了两个半小时，有错误的地方还请指出。"></a>认识比较浅薄，单纯从使用方面入手，整理了两个半小时，有错误的地方还请指出。</h5><h1 id="1-构建项目"><a href="#1-构建项目" class="headerlink" title="1. 构建项目"></a>1. 构建项目</h1><p>创建一个项目之前，首先需要选取合适的工具，目前使用比较广的两个weex脚手架有weexpack和weex-toolkit。</p><h4 id="weex-toolkit（创建的weex项目没有ios和android包）"><a href="#weex-toolkit（创建的weex项目没有ios和android包）" class="headerlink" title="weex-toolkit（创建的weex项目没有ios和android包）"></a>weex-toolkit（创建的weex项目没有ios和android包）</h4><ul><li>weex init weex 创建项目</li><li>修改weex.html文件，将<code>./node_modules/weex-vue-render/index.js</code>修改为<code>./node_modules/weex-vue-render/dist/index.js</code></li><li>cnpm install 加载依赖包</li><li>package.json中的scripts配置<code>&quot;app&quot;: &quot;npm run build &amp; npm run dev &amp; npm run server&quot;</code></li><li>npm run app 启动项目</li></ul><p>目录结构如下图：<br><img src="https://segmentfault.com/img/bVPAmL" alt="clipboard.png"></p><h4 id="weexpack-（创建的weex项目有ios和android包）"><a href="#weexpack-（创建的weex项目有ios和android包）" class="headerlink" title="weexpack （创建的weex项目有ios和android包）"></a>weexpack （创建的weex项目有ios和android包）</h4><ul><li>weexpack create weex 创建项目</li><li>weexpack platform add android 添加android</li><li>weexpack platform add ios 添加ios</li><li>weexpack run ios 模拟器运行</li></ul><p>目录结构如下图：<br><img src="https://segmentfault.com/img/bVPAly" alt="clipboard.png"></p><p>因为我们不打包android和ios，只需要将写好的页面打包成.weex.js文件供ios和android开发人员调用，所以采用了weex init的构建方式。</p><h1 id="2-工具"><a href="#2-工具" class="headerlink" title="2. 工具"></a>2. 工具</h1><h4 id="Weex-Devtools"><a href="#Weex-Devtools" class="headerlink" title="Weex Devtools"></a>Weex Devtools</h4><p>Weex Devtools是Weex开发调试必备的神器，安装好后，终端进入到项目目录，运行weex debug 会自动打开页面</p><p><img src="https://segmentfault.com/img/bVPAfS" alt="clipboard.png"></p><p>扫二维码后</p><p><img src="https://segmentfault.com/img/bVPAgs" alt="clipboard.png"></p><p>点击Inspector可以看页面信息，我们打开Debugger，然后扫描打包好的js文件二维码就可以开始调试了。</p><p><img src="https://segmentfault.com/img/bVPAgM" alt="clipboard.png"></p><p>注： 箭头所指处选debugger，我因为手贱选了个别的，导致好几天console里没有内容提示，还以为版本问题，后来研究了下，发现这里选错了。</p><h1 id="3-遇到的问题"><a href="#3-遇到的问题" class="headerlink" title="3. 遇到的问题"></a>3. 遇到的问题</h1><blockquote><p>官方demo跑不通</p><h5 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h5><p>高一点版本的weex-vue-render里index.js路径改变，导致。修改weex.html文件，将<code>./node_modules/weex-vue-render/index.js</code>修改为<code>./node_modules/weex-vue-render/dist/index.js</code><br>使用vue-resources获取接口数据, weex web上好的，但是weex-playground中跑不通，一片空白，错误信息：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[undefined:344:31] ReferenceError: Can't find variable: document</div><div class="line">addStyle</div><div class="line">addStylesToDom</div><div class="line">exports</div><div class="line"></div><div class="line"><span class="strong">__webpack_require__</span></div><div class="line"></div><div class="line"><span class="strong">__webpack_require__</span></div><div class="line"></div><div class="line"><span class="strong">__webpack_require__</span></div><div class="line"></div><div class="line"><span class="strong">__webpack_require__</span></div><div class="line"></div><div class="line">anonymous</div><div class="line">a@main.js:4:16690</div><div class="line">main.js:7:8740</div></pre></td></tr></table></figure></p></blockquote><h5 id="解决：-1"><a href="#解决：-1" class="headerlink" title="解决："></a>解决：</h5><p>weex中不支持document和window，换成其它方式。weex不支持vue-resources，改成weex支持的fetch</p><blockquote><p><scroll>里loading一直没效果</scroll></p><h5 id="解决：-2"><a href="#解决：-2" class="headerlink" title="解决："></a>解决：</h5><p><scroll>中使用refresh就没法用loading，去掉refresh模块<br>webpack报错，错误信息 <code>ERROR in Entry module not found: Error: Cannot resolve &#39;file&#39; or &#39;directory&#39; /Users/xx/xx/code/weex/app.js in /Users/xx/xx/code/weex</code></scroll></p><h5 id="解决：-3"><a href="#解决：-3" class="headerlink" title="解决："></a>解决：</h5><p>开始一直以为是webpack入口没配置对，检查很多遍，各种测试后，发现这里真的没问题<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// entry: entries</span></div><div class="line"><span class="attribute">entry</span>: &#123;</div><div class="line">  <span class="attribute">app</span>: path.resolve(<span class="string">'./app.js'</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p></blockquote><p>后来找到问题出自<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">resolve</span>: &#123;</div><div class="line">  <span class="attribute">extensions</span>: [<span class="string">'.js'</span>, <span class="string">'.vue'</span>, <span class="string">'.json'</span>]</div><div class="line">&#125;,</div></pre></td></tr></table></figure></p><p>原因是修改了默认的这个配置后，第一个空项不能省略，应该配置为<br><figure class="highlight plain"><figcaption><span>&#123;</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">  extensions: [&apos;&apos;, &apos;.js&apos;, &apos;.vue&apos;, &apos;.json&apos;]</div><div class="line">&#125;,</div></pre></td></tr></table></figure></p><blockquote><p>错误信息 <code>Cannot resolve module &#39;sass-loader&#39;</code></p><h5 id="解决：-4"><a href="#解决：-4" class="headerlink" title="解决："></a>解决：</h5><p>缺少node-sass 或 sass-loader<br><code>npm install node-sass sass-loader --save-dev</code><br>把sass-loader安装成了”scss-loader”: “0.0.1”,也是服了我自己。<br>接口地址只能获取本地数据，配置test环境失败</p><h5 id="解决：-5"><a href="#解决：-5" class="headerlink" title="解决："></a>解决：</h5><p>server.js中加一层代理<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'http-proxy-middleware'</span>)</div><div class="line"></div><div class="line"><span class="comment">// api代理</span></div><div class="line"><span class="keyword">var</span> proxyTable = config.test.proxyTable</div><div class="line"><span class="built_in">Object</span>.keys(proxyTable).forEach(<span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> options = proxyTable[context]</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> options === <span class="string">'string'</span>) &#123;</div><div class="line">    options = &#123; <span class="attr">target</span>: options &#125;</div><div class="line">  &#125;</div><div class="line">  server.use(proxyMiddleware(context, options))</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// proxyTable数据</span></div><div class="line">proxyTable: &#123;</div><div class="line">  <span class="string">'/api'</span>: &#123;</div><div class="line">    <span class="comment">// 测试服务器</span></div><div class="line">    target: <span class="string">'http://ip地址:端口号/xx'</span>,</div><div class="line">    changeOrigin: <span class="literal">true</span>,</div><div class="line">    pathRewrite: &#123;</div><div class="line">      <span class="string">'^/api'</span>: <span class="string">''</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>weex接口调用，fetch的headers某些字段始终设置不上</p><h5 id="解决：-6"><a href="#解决：-6" class="headerlink" title="解决："></a>解决：</h5><p>fetch的headers只能设置下面这些字段<br>参考： <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS</a></p><hr><p>  ● 人为设置了对CORS安全的首部字段集合之外的其他首部字段。该集合为：<br>    ○ Accept<br>    ○ Accept-Language<br>    ○ Content-Language<br>    ○ Content-Type (but note the additional requirements below)<br>    ○ DPR<br>    ○ Downlink<br>    ○ Save-Data<br>    ○ Viewport-Width<br>    ○ Width<br>  ●  Content-Type 的值不属于下列之一:<br>    ○ application/x-www-form-urlencoded<br>    ○ multipart/form-data<br>    ○ text/plain</p><hr><p>stream的fetch使用get方式请求接口，url都会自动加上&amp;undefined，官网的例子也不例外。原本普通接口多加一个undefined也没太大影响，但是我们项目是需要根据url参数计算签名的，所以一直签名不通过。</p></blockquote><p><img src="https://segmentfault.com/img/bVPAyC" alt="clipboard.png"></p><h5 id="解决：-7"><a href="#解决：-7" class="headerlink" title="解决："></a>解决：</h5><p>找到源码出处<br><img src="https://segmentfault.com/img/bVPz7b" alt="clipboard.png"><br><img src="https://segmentfault.com/img/bVPz6u" alt="clipboard.png"><br><img src="https://segmentfault.com/img/bVPABE" alt="clipboard.png"></p><p>weex-vue-render第2753行对get进行了特别处理，第2764行的url拼接了body和hash，因为body没有传值，所以是undefined，注释掉url+=这行就没有undefined了，但是修改node_modules中的包内容显然不是一个合理的解决方案。<br>于是把get方式传值改为body传过来，web端好了，签名没有问题，但是真机上还是报错，排查后发现问题出在get中使用了body传值，找到开发文档，<br><a href="http://weex.apache.org/cn/references/modules/stream.html" target="_blank" rel="external">http://weex.apache.org/cn/references/modules/stream.html</a><br><img src="https://segmentfault.com/img/bVPABf" alt="clipboard.png"><br>然后我凌乱了，为什么明明不能传body你的源码里又要有那么一行代码<code>url += (config.url.indexOf(&#39;?&#39;) &lt;= -1 ? &#39;?&#39; : &#39;&amp;&#39;) + body + hash;</code>。没办法，最后使用了一个超级笨的办法解决了。在签名计算的时候人为的给url加上“&amp;undefined”,计算好签名后，web中fetch参数中的url也要加上“&amp;undefined”，但是真机上是不会有&amp;undefined的，所以真机上的url需要去掉undefined，好了问题解决了。</p><blockquote><p>storage中的<code>getItem(key, callback)</code>封装后，页面没拿到数据。</p><h5 id="解决：-8"><a href="#解决：-8" class="headerlink" title="解决："></a>解决：</h5><p>storage异步造成的，使用promise解决<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</div><div class="line">    storage.getItem(key, event =&gt; &#123;</div><div class="line">      <span class="keyword">let</span> ls = event.data || <span class="string">''</span></div><div class="line">      <span class="keyword">let</span> d = secret.decrypt(ls) <span class="comment">// 对密文字符串进行解密。</span></div><div class="line">      d = <span class="keyword">typeof</span> d === <span class="string">'object'</span> ? <span class="built_in">JSON</span>.parse(d) : d</div><div class="line">      resolve(d)</div><div class="line">    &#125;)</div><div class="line">  &#125;)</div><div class="line">  <span class="built_in">Promise</span>.all([p1]).then(<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</div><div class="line">    callback(result)</div><div class="line">  &#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'error'</span>, err)</div><div class="line">  &#125;)</div></pre></td></tr></table></figure></p><p>页面跳转外部非js链接，在网页上是好的，但真机上一片空白<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">navigator</span><span class="selector-class">.push</span>(&#123;</div><div class="line">  <span class="attribute">url</span>: <span class="string">'https://segmentfault.com/write?freshman=1'</span>,</div><div class="line">  animated: <span class="string">"true"</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure></p></blockquote><h5 id="解决：-9"><a href="#解决：-9" class="headerlink" title="解决："></a>解决：</h5><p>新建一个vue文件，使用weex的web标签包一层，然后打包成weex.js格式，普通调用就好了。<br><code>&lt;web class=&quot;content&quot; :src=&quot;url&quot;&gt;&lt;/web&gt;</code></p><blockquote><p>跳转weex.js页面传参</p><h5 id="解决：-10"><a href="#解决：-10" class="headerlink" title="解决："></a>解决：</h5><p>直接在url后面拼接参数，新页面使用this.$getConfig().bundleUrl获取url解析一下就好了。<br>post提交数据的是后报错415</p><h5 id="解决：-11"><a href="#解决：-11" class="headerlink" title="解决："></a>解决：</h5><p>头部信息一定要和后端协议好，不允许不一致。</p></blockquote><h5 id="转自-我的weex开发之路"><a href="#转自-我的weex开发之路" class="headerlink" title="[转自] 我的weex开发之路"></a>[转自] <a href="https://segmentfault.com/a/1190000009873690" target="_blank" rel="external">我的weex开发之路</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;我的weex开发之路&quot;&gt;&lt;a href=&quot;#我的weex开发之路&quot; class=&quot;headerlink&quot; title=&quot;我的weex开发之路&quot;&gt;&lt;/a&gt;我的weex开发之路&lt;/h1&gt;&lt;h5 id=&quot;认识比较浅薄，单纯从使用方面入手，整理了两个半小时，有错误的地方还
      
    
    </summary>
    
      <category term="探索" scheme="https://github.com/stardew/categories/%E6%8E%A2%E7%B4%A2/"/>
    
    
      <category term="weex" scheme="https://github.com/stardew/tags/weex/"/>
    
  </entry>
  
  <entry>
    <title>regexp-password</title>
    <link href="https://github.com/stardew/regexp-password/"/>
    <id>https://github.com/stardew/regexp-password/</id>
    <published>2017-04-06T11:35:00.000Z</published>
    <updated>2018-06-28T11:12:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则校验密码规则"><a href="#正则校验密码规则" class="headerlink" title="正则校验密码规则"></a>正则校验密码规则</h2><p>1. 8-16位数字、字母和特殊字符~!@#$%^&amp;*-+=_.<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var reg = /^\[~!@#$%^&amp;*\\-+=_<span class="number">.0</span><span class="number">-9</span>a-zA-Z\]&#123;<span class="number">8</span>,<span class="number">16</span>&#125;$/;  </div><div class="line">var str = '<span class="number">1</span>wfwe@<span class="number">99</span>$;' <span class="comment">// 有分号  </span></div><div class="line">console.log(reg.test(str))</div></pre></td></tr></table></figure></p><p>2. 8-16位，且必须只包含数字、字母和特殊字符~!@#$%^&amp;*-+=_.<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var reg = /^(?=\[~!@#$%^&amp;*\\-+=_<span class="number">.0</span><span class="number">-9</span>a-zA-Z\]*\[~!@#$%^&amp;*\\-+=_.\])(?=\[~!@#$%^&amp;*\\-+=_<span class="number">.0</span><span class="number">-9</span>a-zA-Z\]*\[<span class="number">0</span><span class="number">-9</span>\])(?=\[~!@#$%^&amp;*\\-+=_<span class="number">.0</span><span class="number">-9</span>a-zA-Z\]*\[a-zA-Z\])\[~!@#$%^&amp;*\\-+=_<span class="number">.0</span><span class="number">-9</span>a-zA-Z\]&#123;<span class="number">8</span>,<span class="number">16</span>&#125;$/;</div><div class="line">var str = '<span class="number">1</span>w@<span class="number">2812</span>fhif94#$%<span class="number">1</span>'    <span class="comment">// 17位</span></div><div class="line">console.log(reg.test(str))</div></pre></td></tr></table></figure></p><p>3. 感觉上面的有点长，replace了一下，但是看着也没多好，将就下吧。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">注：</div><div class="line">x = <span class="string">'~!@#$%^&amp;*\\\-+=_.'</span>  <span class="comment">// 特殊字符</span></div><div class="line">d = <span class="string">'0-9'</span>  <span class="comment">// 数字</span></div><div class="line">w = <span class="string">'a-zA-Z'</span> <span class="comment">// 字母</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> reg = <span class="string">'^(?=\[xdw\]*\[x\])(?=\[xdw\]*\[d\])(?=\[xdw\]*\[w\])\[xdw\]&#123;8,16&#125;$'</span>.replace(<span class="regexp">/x/gi</span>, <span class="string">'~!@#$%^&amp;*\\\-+=_.'</span>).replace(<span class="regexp">/d/gi</span>, <span class="string">'0-9'</span>).replace(<span class="regexp">/w/gi</span>, <span class="string">'a-zA-Z'</span>);</div><div class="line">reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(reg);</div><div class="line"><span class="keyword">var</span> str = <span class="string">'1w@28194#$%&lt;'</span> <span class="comment">// 有&lt;</span></div><div class="line"><span class="built_in">console</span>.log(reg, reg.test(str))</div></pre></td></tr></table></figure></p><p>注：特殊字符里的‘-’需要转义‘\-’, 3中需要‘\-’</p><h5 id="转自-正则校验密码规则"><a href="#转自-正则校验密码规则" class="headerlink" title="[转自] 正则校验密码规则"></a>[转自] <a href="https://my.oschina.net/luweiweiwei/blog/873937" target="_blank" rel="external">正则校验密码规则</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;正则校验密码规则&quot;&gt;&lt;a href=&quot;#正则校验密码规则&quot; class=&quot;headerlink&quot; title=&quot;正则校验密码规则&quot;&gt;&lt;/a&gt;正则校验密码规则&lt;/h2&gt;&lt;p&gt;1. 8-16位数字、字母和特殊字符~!@#$%^&amp;amp;*-+=_.&lt;br&gt;&lt;figur
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>slice-splice-split-substring-substr</title>
    <link href="https://github.com/stardew/slice-splice-split-substring-substr/"/>
    <id>https://github.com/stardew/slice-splice-split-substring-substr/</id>
    <published>2017-02-20T00:00:00.000Z</published>
    <updated>2018-06-28T11:12:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="slice，splice，split，substring，substr区别"><a href="#slice，splice，split，substring，substr区别" class="headerlink" title="slice，splice，split，substring，substr区别"></a>slice，splice，split，substring，substr区别</h1><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/0vF1DtfHb3Fibq2EbGWGYvbPIBNIsInmickdIAeQ0olClsOQlVyTl2BIV1eqzXgicXiaXusPic1HXEIY7bOHibwEYDTw/0?wx_fmt=jpeg" alt=""></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</div><div class="line">var str = '<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>';</div></pre></td></tr></table></figure><h3 id="slice-slice-i-j"><a href="#slice-slice-i-j" class="headerlink" title="slice(): slice(i,[j])"></a><code>slice(): slice(i,[j])</code></h3><p>描述: 截取数组，返回截取的数组，原数组不变<br>参数:  </p><ul><li>i: 起始位置（可为负数）  </li><li>j: 可选，结束位置，默认结尾  <figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">arr.slice(<span class="number">1</span>, <span class="number">6</span>)<span class="comment">// [3, 5, 7, 9, 2]</span></div><div class="line">arr.slice(<span class="number">1</span>)<span class="comment">// [3, 5, 7, 9, 2, 4, 6, 8, 1, 2, 3, 4, 5]</span></div><div class="line">arr.slice(<span class="number">-1</span>)<span class="comment">// [5]</span></div><div class="line">arr.slice(<span class="number">-1</span>, <span class="number">1</span>)<span class="comment">// []</span></div><div class="line">arr.slice(<span class="number">-3</span>, <span class="number">-1</span>)<span class="comment">// [3, 4]</span></div></pre></td></tr></table></figure></li></ul><h3 id="splice-splice-i-n-a1-ax"><a href="#splice-splice-i-n-a1-ax" class="headerlink" title="splice(): splice(i, n, a1, ..., ax)"></a><code>splice(): splice(i, n, a1, ..., ax)</code></h3><p>描述: 可删除添加数组，原数组被改变，返回删除的数组<br>参数:  </p><ul><li>i: 删除的位置（可为负数）  </li><li>n: 删除数量  </li><li>a1, …, ax: 添加  <figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">arr</span><span class="selector-class">.splice</span>(<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)<span class="comment">// [7, 9, 2, 4]</span></div><div class="line">此时<span class="selector-tag">arr</span>: <span class="selector-attr">[1, 3, 5, 5, 6, 6, 8, 1, 2, 3, 4, 5]</span></div><div class="line"><span class="selector-attr">[1, 3, 5, (删除7, 9, 2, 4) （添加5, 6,） 6, 8, 1, 2, 3, 4, 5]</span></div></pre></td></tr></table></figure></li></ul><h3 id="split-split-s-n"><a href="#split-split-s-n" class="headerlink" title="split(): split(s, n)"></a><code>split(): split(s, n)</code></h3><p>描述: 字符串分割为数组<br>参数:  </p><ul><li>s: 分隔符  </li><li>n: 分割之后数组的长度  <figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">str.split(<span class="string">','</span>)<span class="regexp">//</span> [<span class="string">"1"</span>, <span class="string">" 3"</span>, <span class="string">" 5"</span>, <span class="string">" 7"</span>, <span class="string">" 9"</span>, <span class="string">" 2"</span>, <span class="string">" 4"</span>, <span class="string">" 6"</span>, <span class="string">" 8"</span>, <span class="string">" 1"</span>, <span class="string">" 2"</span>, <span class="string">" 3"</span>, <span class="string">" 4"</span>, <span class="string">" 5"</span>]</div><div class="line">str.split(<span class="string">','</span>, <span class="number">3</span>)<span class="regexp">//</span> [<span class="string">"1"</span>, <span class="string">" 3"</span>, <span class="string">" 5"</span>]</div></pre></td></tr></table></figure></li></ul><h3 id="substring-substring-start-stop"><a href="#substring-substring-start-stop" class="headerlink" title="substring(): substring(start, stop)"></a><code>substring(): substring(start, stop)</code></h3><p>描述: 字符串截取<br>参数:  </p><ul><li>start: 字符串截取的起始位置  </li><li>stop: 字符串结束位置  <figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">str.substring(<span class="number">3</span>, <span class="number">8</span>)<span class="comment">// "3, 5,"</span></div><div class="line">等价于</div><div class="line">str.substring(<span class="number">8</span>, <span class="number">3</span>)<span class="comment">// "3, 5,"</span></div></pre></td></tr></table></figure></li></ul><h3 id="substr-substr-start-length"><a href="#substr-substr-start-length" class="headerlink" title="substr(): substr(start, length)"></a><code>substr(): substr(start, length)</code></h3><p>描述: 字符串截取<br>参数:  </p><ul><li>start: 字符串截取的起始位置  </li><li>length: 截取字符串长度  <figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">str.substr(<span class="number">3</span>, <span class="number">8</span>)<span class="comment">// "3, 5, 7,"</span></div></pre></td></tr></table></figure></li></ul><h5 id="转自-slice-splice-split-substring-substr区别"><a href="#转自-slice-splice-split-substring-substr区别" class="headerlink" title="[转自] slice, splice, split, substring, substr区别"></a>[转自] <a href="https://mp.weixin.qq.com/s?__biz=MzI3NTQ5NTE5Mw==&amp;mid=2247483780&amp;idx=1&amp;sn=61edd08ed65e29a20b445e68421b45c4&amp;chksm=eb02a1f2dc7528e46569efb9145fc9dbcd840aa387217b4e2e3122eda8c093b3c5f493dc6687&amp;mpshare=1&amp;scene=1&amp;srcid=0628QLDMllnLjDumF6woGRGX&amp;key=aa3a7cd9173eb904b4f6fb7db2efe2f8ac6b5b8b9dbc7dc6f008ac4056af8f714b6ed74a92e95797274fd5d5e565ec97a560d085d7db8c4ea07812c444f147750d8277e00e2ed2eaf4b201262a8db9ee&amp;ascene=0&amp;uin=NzgyNzAwMTAx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.4+build&amp;version=12020610&amp;nettype=WIFI&amp;lang=zh_CN&amp;fontScale=100&amp;pass_ticket=3r5tdwajo%2Bn%2FJyql48TdVB%2FIyWmFLBAbbtRIhDbY8dpbaiMNp6ziZZAl21WufchK" target="_blank" rel="external">slice, splice, split, substring, substr区别</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;slice，splice，split，substring，substr区别&quot;&gt;&lt;a href=&quot;#slice，splice，split，substring，substr区别&quot; class=&quot;headerlink&quot; title=&quot;slice，splice，split
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>isarray</title>
    <link href="https://github.com/stardew/isarray/"/>
    <id>https://github.com/stardew/isarray/</id>
    <published>2017-02-17T00:00:00.000Z</published>
    <updated>2018-06-28T11:08:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="鉴别数组"><a href="#鉴别数组" class="headerlink" title="鉴别数组"></a>鉴别数组</h1><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/0vF1DtfHb3F22ruqIzJNWgnugCYFB4eOy83XFBiaS39FuXujVjpvicCMA1gNE3IIrInwmpExmfnRg0vcEVWwEHSg/0?wx_fmt=jpeg" alt=""></p><p>判断一个对象是否是数组，有五种方法，如下：<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line"><span class="keyword">var</span> obj = <span class="comment">&#123;a:1&#125;</span>;</div><div class="line"></div><div class="line">toString返回对象的字符串表示</div><div class="line">toString.apply(arr) === <span class="string">'[object Array]'</span>;  <span class="comment">// true</span></div><div class="line">toString.apply(obj) === <span class="string">'[object Array]'</span>; <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="keyword">Object</span>.prototype.toString.call(arr) === <span class="string">'[object Array]'</span>; <span class="comment">// true</span></div><div class="line"><span class="keyword">Object</span>.prototype.toString.call(obj) === <span class="string">'[object Array]'</span>; <span class="comment">// false</span></div><div class="line"></div><div class="line">arr instanceof <span class="keyword">Array</span>; <span class="comment">// true</span></div><div class="line">obj instanceof <span class="keyword">Array</span>; <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="keyword">Array</span>.isArray(arr); <span class="comment">// true</span></div><div class="line"><span class="keyword">Array</span>.isArray(obj); <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="comment">// constructor 指向创建当前对象的构造函数</span></div><div class="line">arr.<span class="keyword">constructor</span> === <span class="keyword">Array</span> <span class="comment">// true</span></div><div class="line">obj.<span class="keyword">constructor</span> === <span class="keyword">Array</span> <span class="comment">// false</span></div></pre></td></tr></table></figure></p><p>PS：<br>基本数据类型只有五种：Null, Undifined, String, Number, Boolean<br>引用类型：Array，Object，Function  </p><h5 id="转自-鉴别数组"><a href="#转自-鉴别数组" class="headerlink" title="[转自] 鉴别数组"></a>[转自] <a href="https://mp.weixin.qq.com/s?__biz=MzI3NTQ5NTE5Mw==&amp;mid=2247483777&amp;idx=1&amp;sn=afaa43f8aeda14494fc1f0548bea5f4a&amp;chksm=eb02a1f7dc7528e1ad1de8480cc960950aaf4fb48481a707c2b4049e8cf38a4f9869671abdd5&amp;mpshare=1&amp;scene=1&amp;srcid=0628bOSEN5a1yDfO54Rz1qKb&amp;key=d8aade18608a3d7081d281c4945d2a5ae2411e3cdb859bc5aef4f6045ad3c7c0b8f450da58d17806dda7df259b7ee472994a556c047ce7c8259165fbda1baf5614aa0777c33d4c2fb4ee1835056faa60&amp;ascene=0&amp;uin=NzgyNzAwMTAx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.4+build&amp;version=12020610&amp;nettype=WIFI&amp;lang=zh_CN&amp;fontScale=100&amp;pass_ticket=3r5tdwajo%2Bn%2FJyql48TdVB%2FIyWmFLBAbbtRIhDbY8dpbaiMNp6ziZZAl21WufchK" target="_blank" rel="external">鉴别数组</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;鉴别数组&quot;&gt;&lt;a href=&quot;#鉴别数组&quot; class=&quot;headerlink&quot; title=&quot;鉴别数组&quot;&gt;&lt;/a&gt;鉴别数组&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/0vF1DtfHb3F22ruqIzJN
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>this</title>
    <link href="https://github.com/stardew/this/"/>
    <id>https://github.com/stardew/this/</id>
    <published>2017-02-10T00:00:00.000Z</published>
    <updated>2018-06-28T11:12:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/0vF1DtfHb3FiaxWvAb4GHrpmBlIphvVkCnqBAm6o9AYoVRKPddk6L4OdlLQcxKUheTgR7QpvcIloHAKFiahA4CsQ/0?wx_fmt=jpeg" alt=""></p><p>判断 this 指向谁，看执行时而非定义时，只要function没有绑定在对象上调用，它的 this 就是window。<br>箭头函数的特征是，定义在哪，this 就指向哪。  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!--允许全屏--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"yes"</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"yes"</span> <span class="attr">name</span>=<span class="string">"apple-touch-fullscreen"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"data-spm"</span> <span class="attr">content</span>=<span class="string">"a215s"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"telephone=no,email=no"</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"fullscreen=yes,preventMove=no"</span> <span class="attr">name</span>=<span class="string">"ML-Config"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>this<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dom"</span> <span class="attr">onclick</span>=<span class="string">"getId()"</span>&gt;</span>this:<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>this关键字总是返回一个对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>this总是指向类的当前实例<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>this 不能赋值<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>this 不能脱离 类/对象<span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>this 是面向对象语言里常见的一个关键字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>判断 this 指向谁，看执行时而非定义时，只要函数(function)没有绑定在对象上调用，它的 this 就是 window。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>箭头函数的特征就是，定义在哪，this 就指向哪。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">   <span class="comment">// "use strict";</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">   <span class="comment">// this和构造函数</span></span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">Company</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="actionscript">      <span class="keyword">this</span>.name = <span class="string">'stardew'</span>;</span></div><div class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="keyword">typeof</span> <span class="keyword">this</span>); <span class="comment">// Company "object"</span></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> company = <span class="keyword">new</span> Company();</span></div><div class="line"><span class="javascript">    <span class="built_in">console</span>.log(company.name);  <span class="comment">// stardew</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// this和对象</span></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> company = &#123;</span></div><div class="line"><span class="actionscript">      name: <span class="string">'stardew'</span>,</span></div><div class="line"><span class="undefined">      member: 300,</span></div><div class="line"><span class="actionscript">      getMember: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="keyword">this</span> === company);  <span class="comment">// company true</span></span></div><div class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="keyword">this</span>.member;  <span class="comment">//  300</span></span></div><div class="line"><span class="undefined">      &#125;,</span></div><div class="line"><span class="actionscript">      setMember: <span class="function"><span class="keyword">function</span><span class="params">(n)</span> </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span></div><div class="line"><span class="actionscript">        <span class="keyword">this</span>.member = n;</span></div><div class="line"><span class="undefined">      &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    company.getMember(); </span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// this和函数</span></span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getMember</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.member);</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> m1 = &#123;</span></div><div class="line"><span class="undefined">      member: 300</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> m2 = &#123;</span></div><div class="line"><span class="undefined">      member: 200</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="actionscript">    getMember.call(m1); <span class="comment">// 300</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// 全局环境的this</span></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> member = <span class="number">300</span>;</span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">cmpy</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.member);</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> Company = &#123;</span></div><div class="line"><span class="undefined">      member: 200,</span></div><div class="line"><span class="actionscript">      getMember: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.member)</span></div><div class="line"><span class="undefined">      &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> getMember = Company.getMember;</span></div><div class="line"><span class="actionscript">    cmpy(); <span class="comment">// 300</span></span></div><div class="line"><span class="actionscript">    getMember();  <span class="comment">// 300</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// this和DOM事件</span></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> dom = <span class="built_in">document</span>.getElementById(<span class="string">'dom'</span>);</span></div><div class="line"><span class="actionscript">    dom.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'this'</span>, <span class="keyword">this</span>); <span class="comment">// dom</span></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'id'</span>, <span class="keyword">this</span>, <span class="keyword">this</span>.id); <span class="comment">// window</span></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// this可以被call/apply/bind改变</span></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> m1 = &#123;</span></div><div class="line"><span class="undefined">      member: 300</span></div><div class="line"><span class="undefined">    &#125;;</span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> m2 = &#123;</span></div><div class="line"><span class="undefined">      member: 200</span></div><div class="line"><span class="undefined">    &#125;;  </span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">showMember</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.member);</span></div><div class="line"><span class="undefined">    &#125;  </span></div><div class="line"><span class="actionscript">    showMember(); <span class="comment">// undifined</span></span></div><div class="line"><span class="actionscript">    showMember.call(m1);  <span class="comment">// 300</span></span></div><div class="line"><span class="actionscript">    showMember.apply(m2); <span class="comment">// 200</span></span></div><div class="line"><span class="actionscript">    showMember.bind(m2)();  <span class="comment">// 200</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// ES6箭头函数(arrow function)和this 箭头函数的特征就是，定义在哪，this就指向哪。</span></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> company = &#123;</span></div><div class="line"><span class="actionscript">      name: <span class="string">'stardew'</span>,</span></div><div class="line"><span class="undefined">      member: 100,</span></div><div class="line"><span class="actionscript">      getMember: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="built_in">document</span>.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="keyword">this</span>.member) ;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">      &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="actionscript">    company.getMember(); <span class="comment">// document undifined</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> company = &#123;</span></div><div class="line"><span class="actionscript">      name: <span class="string">'stardew'</span>,</span></div><div class="line"><span class="undefined">      member: 100,</span></div><div class="line"><span class="actionscript">      getMember: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="built_in">document</span>.onclick = <span class="function"><span class="params">ev</span> =&gt;</span> &#123;</span></div><div class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="keyword">this</span>.member) ;  <span class="comment">// conpany 100</span></span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">      &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    company.getMember();</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h5 id="转自-详解this"><a href="#转自-详解this" class="headerlink" title="[转自] 详解this"></a>[转自] <a href="https://mp.weixin.qq.com/s?__biz=MzI3NTQ5NTE5Mw==&amp;mid=2247483773&amp;idx=1&amp;sn=edcd836e97a54132e2397d4c310584f1&amp;chksm=eb02a10bdc75281d1f1180a70b24041d818af7ca58f9571998410d4c2fd49649928cc5809efa&amp;mpshare=1&amp;scene=1&amp;srcid=0628WKgNWbWUhnpBurWBaP3l&amp;key=aa3a7cd9173eb9045c45e29588d3da296a85b1ea5c80f8ac246f12c4db5f324ff9bac341222c6fd94abb1c4a8b56cc2df884bca59c082c21ad651d3bd4cd0f38c5d87031882bf421dc9c1aaf692f46e1&amp;ascene=0&amp;uin=NzgyNzAwMTAx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.4+build&amp;version=12020610&amp;nettype=WIFI&amp;lang=zh_CN&amp;fontScale=100&amp;pass_ticket=3r5tdwajo%2Bn%2FJyql48TdVB%2FIyWmFLBAbbtRIhDbY8dpbaiMNp6ziZZAl21WufchK" target="_blank" rel="external">详解this</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/0vF1DtfHb3FiaxWvAb4GHrpmBlIphvVkCnqBAm6o9AYoVRKPddk6L4OdlLQcxKUheTgR7QpvcIloHAKFiahA4CsQ/0?wx_f
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>heaps-stacks-heapstacks-queues-arrays-chain</title>
    <link href="https://github.com/stardew/heaps-stacks-heapstacks-queues-arrays-chain/"/>
    <id>https://github.com/stardew/heaps-stacks-heapstacks-queues-arrays-chain/</id>
    <published>2016-12-28T00:00:00.000Z</published>
    <updated>2018-06-28T11:07:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="堆、栈、堆栈、队列、数组、链表"><a href="#堆、栈、堆栈、队列、数组、链表" class="headerlink" title="堆、栈、堆栈、队列、数组、链表"></a>堆、栈、堆栈、队列、数组、链表</h1><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H4PUInw6f0J2wlASSfuk1j0zl0zXLbFv0DqibkGSTVr9qg6cgibXVo7VZVCtxfia16vJvBiaRSZFVPjw/0?wx_fmt=png" alt=""></p><ol><li>堆、栈、堆栈<br> 堆、栈有两种形式，一种是数据结构中的堆、栈，还有一种是存储区的堆和栈。  </li></ol><ul><li><p>1.1 数据结构  </p><ul><li>堆（heap）：一种树型数据结构，是一棵完全二叉树，堆中某个节点的值总是不大于或不小于其父节点的值。  </li><li>栈（stack）：又名堆栈，是一种运算受限的线性表，仅允许在表的一端（栈顶）进行插入和删除操作。  </li><li>堆栈：指的就是栈，而不是堆加栈，有人说据查是因为口误。<br>区别：  </li><li>栈是一种先进后出的数据结构。  </li><li>堆可以被看成是一棵树，如：堆排序。  </li></ul></li><li><p>1.2 存储区<br>堆和栈是两种内存分配的两个统称，都是用来从底层操作系统中获取内存的，都存储于计算机RAM。  </p></li><li>栈：为执行线程留出的内存空间。暂时存放数据和地址，通常用来保护断点和现场。  </li><li>堆：为动态分配预留的内存空间。可以任何时候分配和释放，在不知道数据大小以及数据很大的情况下使用。  </li><li>在多线程环境下每一个线程都可以有他自己完全的独立的栈，但是他们共享堆。并行存取被堆控制而不是栈。  </li><li>空间分配区别：  </li><li>栈（操作系统）由操作系统自动分配释放 ，程序员是无法控制，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。新加数据项放在其他数据的顶部，移除时也只能移除最顶部的数据，不能越位获取。  </li><li>堆（操作系统）由程序员分配释放内存，容易产生内存碎片， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表。数据项位置没有固定的顺序，可以以任何顺序插入和删除。  </li><li>缓存方式区别：  <ul><li>栈使用的是一级缓存， 他们通常都是被调用时处于存储空间中，调用完毕立即释放。优势是，存取速度比堆要快，仅次于直接位于CPU中的寄存器。缺点是，存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。  </li><li>堆则是存放在二级缓存中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收），所以调用这些对象的速度要相对来得低一些。  </li></ul></li></ul><p>程序的局部变量存在于（栈）中，全局变量存在于（静态区 ）中，动态申请数据存在于（ 堆）中。  </p><ol><li>队列：一种特殊的线性表，只允许队尾入队，队头出队操作。（可以用数组和链表实现）  </li><li>数组：相同数据类型的元素按一定顺序排列的集合（栈中分配空间），便于查找。  </li><li>链表：链表是一种物理存储单元上非连续、非顺序的存储结构（堆中分配空间），便于插入删除。  </li></ol><p>看到一个很好的文章：<a href="http://blog.jobbole.com/75321/" target="_blank" rel="external">http://blog.jobbole.com/75321/</a>  </p><h5 id="转自-堆、栈、堆栈、队列、数组、链表"><a href="#转自-堆、栈、堆栈、队列、数组、链表" class="headerlink" title="[转自] 堆、栈、堆栈、队列、数组、链表"></a>[转自] <a href="https://mp.weixin.qq.com/s?__biz=MzI3NTQ5NTE5Mw==&amp;mid=2247483770&amp;idx=1&amp;sn=0b3ccb02a5308ec249316288827ed8d2&amp;chksm=eb02a10cdc75281a0afcb9034e9590139bea53ab5d239630962dce4f6ee7550cdd5d70bd6884&amp;mpshare=1&amp;scene=1&amp;srcid=062835G4X5zAVAgRQqyoVTC7&amp;key=cf0dc319bc22985efd46f88c5c9d448b33412bcac022f8c0e70ff9883e454aeb7b038896b08b56a91dc6dc6ff889eac0b978db8ffc36042c202b25103a6537ada07da22481303ed6376ecbbe6abee02d&amp;ascene=0&amp;uin=NzgyNzAwMTAx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.4+build&amp;version=12020610&amp;nettype=WIFI&amp;lang=zh_CN&amp;fontScale=100&amp;pass_ticket=3r5tdwajo%2Bn%2FJyql48TdVB%2FIyWmFLBAbbtRIhDbY8dpbaiMNp6ziZZAl21WufchK" target="_blank" rel="external">堆、栈、堆栈、队列、数组、链表</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;堆、栈、堆栈、队列、数组、链表&quot;&gt;&lt;a href=&quot;#堆、栈、堆栈、队列、数组、链表&quot; class=&quot;headerlink&quot; title=&quot;堆、栈、堆栈、队列、数组、链表&quot;&gt;&lt;/a&gt;堆、栈、堆栈、队列、数组、链表&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>url-page-process</title>
    <link href="https://github.com/stardew/url-page-process/"/>
    <id>https://github.com/stardew/url-page-process/</id>
    <published>2016-12-19T00:00:00.000Z</published>
    <updated>2018-06-28T11:13:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="输入网址到打开页面的过程"><a href="#输入网址到打开页面的过程" class="headerlink" title="输入网址到打开页面的过程"></a>输入网址到打开页面的过程</h1><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/0vF1DtfHb3FvHpzCpd15vUb1B1M6ox9gdJKt7pwvGeCaaMGYzPXXI2pN5P66Cvz4ONOiarnIO51yqFRGCQlyjUQ/0?wx_fmt=jpeg" alt=""></p><p>输入网址到打开页面步骤如下：  </p><ol><li><p>浏览器中输入网址；  </p></li><li><p>发送至DNS服务器并获得域名对应的WEB服务器的ip地址（附1. DNS域名解析）；  </p></li><li><p>与WEB服务器建立TCP连接（附2. TCP三次握手，四次挥手）；  </p></li><li><p>浏览器向WEB服务器的ip地址发送相应的http请求（附3. http请求）；  </p></li><li><p>WEB服务器响应请求并返回指定URL的数据，或错误信息，如果设定重定向，则重定向到新的URL地址；  </p></li><li><p>浏览器下载数据后解析HTML源文件，解析的过程中实现对页面的排版，解析完成后在浏览器中显示基础页面（附4. 浏览器解析）；  </p></li><li><p>分析页面中的超链接并显示在当前页面，重复以上过程直至无超链接需要发送，完成全部显示。  </p></li></ol><p>附1. DNS域名解析</p><p>（1）在浏览器中输入www.baidu.com域名，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。  </p><p>（2）如果hosts里没有这个域名的映射，则查找本地DNS解析器缓存，是否有这个网址映射关系，如果有，直接返回，完成域名解析。  </p><p>（3）如果hosts与本地DNS解析器缓存都没有相应的网址映射关系，首先会找TCP/ip参数中设置的首选DNS服务器，在此我们叫它本地DNS服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。  </p><p>（4）如果要查询的域名，不由本地DNS服务器区域解析，但该服务器已缓存了此网址映射关系，则调用这个IP地址映射，完成域名解析，此解析不具有权威性。  </p><p>（5）如果本地DNS服务器本地区域文件与缓存解析都失效，则根据本地DNS服务器的设置（是否设置转发器）进行查询（ISP查询），如果未用转发模式，本地DNS就把请求发至13台根DNS，根DNS服务器收到请求后会判断这个域名(.com)是谁来授权管理，并会返回一个负责该顶级域名服务器的一个IP。本地DNS服务器收到IP信息后，将会联系负责.com域的这台服务器。这台负责.com域的服务器收到请求后，如果自己无法解析，它就会找一个管理.com域的下一级DNS服务器地址(baidu.com)给本地DNS服务器。当本地DNS服务器收到这个地址后，就会找baidu.com域服务器，重复上面的动作，进行查询，直至找到www.baidu.com主机。  </p><p>（6）如果用的是转发模式，此DNS服务器就会把请求转发至上一级DNS服务器，由上一级服务器进行解析，上一级服务器如果不能解析，或找根DNS或把转请求转至上上级，以此循环。不管是本地DNS服务器用是是转发，还是根提示，最后都是把结果返回给本地DNS服务器，由此DNS服务器再返回给客户机。  </p><p>从客户端到本地DNS服务器是属于递归查询，而DNS服务器之间就是的交互查询就是迭代查询。  </p><p>下图为DNS查找过程图：  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3FvHpzCpd15vUb1B1M6ox9gFpsLk2jNMD8FGhibyOH5oIFibVXGoVkX6VGiaVFCicPicV5opDq7Cl3eOYg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p> 域名解析过程中客户与服务器的交互过程遇一个域名对应多个ip地址时，解决方案：  </p><p>1）负载平衡器  </p><p>2）根据用户所处的地理位置  </p><p>3）一个IP地址映射多个物理主机的路由技术：Anycast （应用广）  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3FvHpzCpd15vUb1B1M6ox9g59SCDsLVib94ZOnqoOgKjFtnNgMq4S2TicA4BJLFw3ASBT7FV6lQbfrg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>附2. TCP三次握手四次挥手  </p><p>在理解三次握手之前先来了解一下TCP报文，头部结构如下：  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3FvHpzCpd15vUb1B1M6ox9g59SCDsLVib94ZOnqoOgKjFtnNgMq4S2TicA4BJLFw3ASBT7FV6lQbfrg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>（1）源端口（16位 / 2字节）：源端口号  </p><p>（2）目的端口（16位）：目的端口号  </p><p>（3）序号（32位）：范围 [0, 232-1]，TCP连接中传送的字节流中的每一个字节都按序号编号。  </p><p>（4）确认号（32位）：期望收到对方下一个报文段的第一个数据字节的序号。  </p><p>（5）数据偏移（4位）：TCP报文段的数据起始距离TCP报文段的起始处有多远。TCP首部最大长度为60字节。  </p><p>（6）保留（6位）：保留以后使用。  </p><p>（7）紧急URG（1位）：URG=1时，会告诉系统此报文中有紧急字段，应尽快传送，优先级变高。  </p><p>（8）确认ACK（1位）：ACK=1时，确认号字段有效，连接建立后所有传送的报文段都必须把ACK置1。  </p><p>（9）推送PSH（1位）：当两个应用进程进行交互式的通信时，有时在一端的应用进程希望在键入一个命令后立即就能收到对方的响应。在这种情况下，TCP就可以使用推送操作。这时，发送方TCP把PSH置为1，并立即创建一个报文段发送出去。揽收方TCP收到PSH=1的报文段，就尽快的推送向前，而不再等到整个缓存都填满了后再向上交付。  </p><p>（10）复位RST（1位）：当RST=1时，表明TCP连接中出现严重差错，必须释放连接，然后再重新建立运输连接。还可用来拒绝一个非法报文段或拒绝打开连接。  </p><p>（11）同步SYN（1位）：在建立连接时用来同步序号。  </p><p>（12）终止FIN（1位）：表明发送完毕，用来释放连接。  </p><p>（13）窗口（16位）：[0, 216-1]之间的整数，指发送报文段一方的接收窗口。窗口值是接收方让发送方设置其发送窗口的依据，经常是动态变化的。窗口字段明确指出了现在允许对方发送的数据量。  </p><p>（14）检验和（16位）：检验首部和数据两部分，计算时要在TCP报文段之前加上12字节的伪首部。  </p><p>（15）紧急指针（16位）：URG=1时才有意义，指本报文段中紧急数据的字节数，窗口为0时也可以发送紧急数据。  </p><p>（16）选项（可变）：最多40字节。  </p><p>备注：TCP是可靠连接，还有一种不可靠连接UDP。UDP包括首部字段和数据字段，首部字段只有8个字节，源端口、目的端口、长度和检验和，每个字段两字节。  </p><p>三次握手  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3FvHpzCpd15vUb1B1M6ox9gWZNkrIpzGdYFpibxHnTaJupibHzgwhnKKhFYIvnvb0ozIY9knliaEFjaw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>四次挥手  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3FvHpzCpd15vUb1B1M6ox9gl9UaNVG1b13Ry0DV5DIT1a2LBicuN6a65gjFJvmotC1xwibPhjHcnLXg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>连接时需要三次握手是因为：当服务器端收到客户端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。  </p><p>关闭时需要四次握手是因为：当服务器端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉客户端，“你发的FIN报文我收到了”。只有等到我服务器端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。  </p><p>TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态是因为：虽然按道理，四个报文都发送完毕，我们可以直接进入CLOSE状态了，但是我们必须假设网络是不可靠的，有可能最后一个ACK丢失。所以TIME_WAIT状态就是用来重发可能丢失的ACK报文。  </p><p>附3. http请求  </p><p>http（Hyper Text Transfer Protocol）即超文本传输协议，处于ISO网络模型的最高层（应用层），是目前网页传输的的通用协议。  </p><p>http请求是指从客户端到服务器端的请求消息，包括：消息首行中对资源的请求方法、资源的标识符及使用的协议。  </p><p>http协议采用了请求/响应模型，浏览器或其他客户端发出请求，服务器给与响应。  </p><p>http请求包括请求头和请求体，重点主要在请求头部分，分为Request和Response。  </p><p>http Request Header 请求头</p><table><thead><tr><th>字段</th><th>描述</th><th>使用</th></tr></thead><tbody><tr><td>Accept</td><td>指定客户端能够接收的内容类型</td><td>Accept: application/json, text/plain, <em>/</em></td></tr><tr><td>Accept-Charset</td><td>浏览器可以接受的字符编码集</td><td>Accept-Charset: iso-8859-5</td></tr><tr><td>Accept-Encoding</td><td>指定浏览器可以支持的web服务器返回内容压缩编码类型</td><td>Accept-Encoding: gzip, deflate, sdch</td></tr><tr><td>Accept-Language</td><td>浏览器可接受的语言</td><td>Accept-Language:zh-CN,zh;q=0.8</td></tr><tr><td>Accept-Ranges</td><td>可以请求网页实体的一个或者多个子范围字段</td><td>Accept-Ranges: bytes</td></tr><tr><td>Authorization</td><td>HTTP授权的授权证书</td><td>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Cache-Control</td><td>指定请求和响应遵循的缓存机制</td><td>Cache-Control: no-cache</td></tr><tr><td>Connection</td><td>表示是否需要持久连接（HTTP 1.1默认进行持久连接）</td><td>Connection: keep-alive</td></tr><tr><td>Cookie</td><td>HTTP请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器。</td><td>Cookie: number=5185918; name=lujiang;</td></tr><tr><td>Content-Length</td><td>请求的内容长度</td><td>Content-Length: 518</td></tr><tr><td>Content-Type</td><td>请求的与实体对应的MIME信息</td><td>Content-Type: application/x-www-form-urlencoded</td></tr><tr><td>Date</td><td>请求发送的日期和时间</td><td>Date: Tue, 13 Dec 2016 12:09:40 GMT</td></tr><tr><td>Expect</td><td>请求的特定的服务器行为</td><td>Expect: 100-continue</td></tr><tr><td>From</td><td>发出请求的用户的Email</td><td>From: user@mail.com</td></tr><tr><td>Host</td><td>指定请求的服务器的域名和端口号</td><td>Host: www.baidu.com</td></tr><tr><td>If-Match</td><td>只有请求内容与实体相匹配才有效</td><td>If-Match: “51859185185918518591851859185185918”</td></tr><tr><td>If-Modified-Since</td><td>如果请求的部分在指定时间之后被修改则请求成功，未被修改则返回304代码</td><td>If-Modified-Since: Tue, 13 Dec 2016 12:09:40 GMT</td></tr><tr><td>If-None-Match</td><td>如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变</td><td>If-None-Match: “51859185185918518591851859185185918”</td></tr><tr><td>If-Range</td><td>如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。参数也为Etag</td><td>If-Range: “51859185185918518591851859185185918”</td></tr><tr><td>If-Unmodified-Since</td><td>只在实体在指定时间之后未被修改才请求成功</td><td>If-Unmodified-Since: Tue, 13 Dec 2016 12:09:40 GMT</td></tr><tr><td>Max-Forwards</td><td>限制信息通过代理和网关传送的时间</td><td>Max-Forwards: 10</td></tr><tr><td>Pragma</td><td>用来包含实现特定的指令</td><td>Pragma: no-cache</td></tr><tr><td>Proxy-Authorization</td><td>连接到代理的授权证书</td><td>Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Range</td><td>只请求实体的一部分，指定范围</td><td>Range: bytes=500-999</td></tr><tr><td>Referer</td><td>先前网页的地址，当前请求网页紧随其后,即来路</td><td>Referer: <a href="http://www.baidu.com/" target="_blank" rel="external">http://www.baidu.com/</a></td></tr><tr><td>TE</td><td>客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息</td><td>TE: trailers,deflate;q=0.5</td></tr><tr><td>Upgrade</td><td>向服务器指定某种传输协议以便服务器进行转换（如果支持</td><td>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</td></tr><tr><td>User-Agent</td><td>User-Agent的内容包含发出请求的用户信息</td><td>User-Agent: Mozilla/5.0 (Linux; X11)</td></tr><tr><td>Via</td><td>通知中间网关或代理服务器地址，通信协议</td><td>Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)</td></tr><tr><td>Warning</td><td>关于消息实体的警告信息</td><td>Warn: 188 Miscellaneous warning</td></tr></tbody></table><p>HTTP Responses Header 响应头  </p><table><thead><tr><th>字段</th><th>描述</th><th>使用</th></tr></thead><tbody><tr><td>Accept-Ranges</td><td>表明服务器是否支持指定范围请求及哪种类型的分段请求</td><td>Accept-Ranges: bytes</td></tr><tr><td>Age</td><td>从原始服务器到代理缓存形成的估算时间（以秒计，非负</td><td>Age: 58</td></tr><tr><td>Allow</td><td>对某网络资源的有效的请求行为，不允许则返回405</td><td>Allow: GET, HEAD</td></tr><tr><td>Cache-Control</td><td>告诉所有的缓存机制是否可以缓存及哪种类型</td><td>Cache-Control: no-cache</td></tr><tr><td>Content-Encoding</td><td>web服务器支持的返回内容压缩编码类型</td><td>Content-Encoding: gzip</td></tr><tr><td>Content-Language</td><td>响应体的语言</td><td>Content-Language: en,zh</td></tr><tr><td>Content-Length</td><td>响应体的长度</td><td>Content-Length: 518</td></tr><tr><td>Content-Location</td><td>请求资源可替代的备用的另一地址</td><td>Content-Location: /index.htm</td></tr><tr><td>Content-MD5</td><td>返回资源的MD5校验值</td><td>Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==</td></tr><tr><td>Content-Range</td><td>在整个返回体中本部分的字节位置</td><td>Content-Range: bytes 518-5918</td></tr><tr><td>Content-Type</td><td>返回内容的MIME类型</td><td>Content-Type: text/html; charset=utf-8</td></tr><tr><td>Date</td><td>原始服务器消息发出的时间</td><td>Date: Tue, 13 Dec 2016 12:09:40 GMT</td></tr><tr><td>ETag</td><td>请求变量的实体标签的当前值</td><td>ETag: “51859185185918518591851859185185918”</td></tr><tr><td>Expires</td><td>响应过期的日期和时间</td><td>Expires: Tue, 13 Dec 2016 12:09:40 GMT</td></tr><tr><td>Last-Modified</td><td>请求资源的最后修改时间</td><td>Last-Modified: Tue, 13 Dec 2016 12:09:40 GMT</td></tr><tr><td>Location</td><td>用来重定向接收方到非请求URL的位置来完成请求或标识新的资源</td><td>Location: www.baidu.com</td></tr><tr><td>Pragma</td><td>包括实现特定的指令，它可应用到响应链上的任何接收方</td><td>Pragma: no-cache</td></tr><tr><td>Proxy-Authenticate</td><td>它指出认证方案和可应用到代理的该URL上的参数</td><td>Proxy-Authenticate: Basic</td></tr><tr><td>refresh</td><td>应用于重定向或一个新的资源被创造，在5秒之后重定向（由网景提出，被大部分浏览器支持）</td><td>Refresh: 5; url=www.baidu.com</td></tr><tr><td>Retry-After</td><td>如果实体暂时不可取，通知客户端在指定时间之后再次尝试</td><td>Retry-After: 58</td></tr><tr><td>Server</td><td>web服务器软件名称</td><td>server: Cowboy</td></tr><tr><td>Set-Cookie</td><td>设置Http Cookie</td><td>Set-Cookie: UserID=lujiang; Max-Age=3600; Version=1</td></tr><tr><td>Trailer</td><td>指出头域在分块传输编码的尾部存在</td><td>Trailer: Max-Forwards</td></tr><tr><td>Transfer-Encoding</td><td>文件传输编码</td><td>Transfer-Encoding: chunked</td></tr><tr><td>Vary</td><td>告诉下游代理是使用缓存响应还是从原始服务器请求</td><td>Vary: *</td></tr><tr><td>Via</td><td>告知代理客户端响应是通过哪里发送的</td><td>Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)</td></tr><tr><td>Warning</td><td>警告实体可能存在的问题</td><td>Warning: 188 Miscellaneous warning</td></tr><tr><td>WWW-Authenticate</td><td>表明客户端请求实体应该使用的授权方案</td><td>WWW-Authenticate: Basic</td></tr></tbody></table><p>请求完成后，响应数据都会返回一个状态码（1~599），表示请求状态，各状态码映射结果如下：  </p><p>http状态码  </p><table cellspacing="0" cellpadding="0"><tbody><tr><td colspan="3" valign="top" style="border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-color: rgb(0, 0, 0); padding: 4px; word-break: break-all;" width="184" height="13"><p style="text-align: center; line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 11px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">http</span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 11px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">状态码</span></span></p></td></tr><tr><td rowspan="2" valign="middle" style="border-color: rgb(0, 0, 0); padding: 4px;" width="107" height="35"><p style="line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">100-199 </span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">用于指定客户端应相应的某些动作</span></span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="31" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">100</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="71" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">继续</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">101</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">分组交换协</span></p></td></tr><tr><td rowspan="7" valign="middle" style="border-color: rgb(0, 0, 0); padding: 4px;" width="107" height="146"><p style="line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">200-299 </span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">用于表示请求成功</span></span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="31" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">200</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="71" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">OK</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">201</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">被创建</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="14"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">202</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="14"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">被采纳</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">203</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">非授权信息</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">204</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">无内容</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">205</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">重置内容</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">206</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">部分内容</span></p></td></tr><tr><td rowspan="7" valign="middle" style="border-color: rgb(0, 0, 0); padding: 4px;" width="107" height="146"><p style="line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">300-399 </span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">用于已经移动的文件并且常被包含在定位头信息中指定新的地址信息</span></span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="31" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">300</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="71" height="13"><p style="line-height: normal;"><span style="font-size: 12px;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">多选项</span><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">&nbsp;</span></span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="14"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">301</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="14"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">永久地传送</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">302</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style="font-size: 12px;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">找到</span><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);"> ( </span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">临时重定向</span><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);"> )</span></span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">303</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">参见其他</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">304</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">未改动</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">305</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">&nbsp;</span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">使用代理</span></span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">307</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">暂时重定向</span></p></td></tr><tr><td rowspan="18" valign="middle" style="border-color: rgb(0, 0, 0); padding: 4px;" width="107" height="390"><p style="line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">400-499 </span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">用于指出客户端的错误</span></span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="31" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">400</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="71" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">错误请求</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="14"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">401</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="14"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">未授权</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">402</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">要求付费</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">403</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">禁止</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">404</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">未找到</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">405</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">不允许的方法</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">406</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style="font-size: 12px;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">不被采纳</span><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">&nbsp;</span></span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">407</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">要求代理授权</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="14"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">408</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="14"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">请求超时</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">409</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">冲突</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">410</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">过期的</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">411</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">要求的长度</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">412</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">前提不成立</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">413</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">请求实例太大</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="14"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">414</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="14"><p style="line-height: normal;"><span style="font-size: 12px;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">请求</span><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">URI</span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">太大</span></span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">415</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">不支持的媒体类型</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">416</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">无法满足的请求范围</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">417</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">失败的预期</span></p></td></tr><tr><td rowspan="6" valign="middle" style="border-color: rgb(0, 0, 0); padding: 4px;" width="107" height="124"><p style="line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">500-599 </span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">用于支持服务器错误</span></span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="31" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">500</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="71" height="13"><p style="line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">&nbsp;</span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">内部服务器错误</span></span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">501</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">未被使用</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">502</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">网关错误</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="14"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">503</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="14"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">不可用的服务</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">504</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="49" height="13"><p style="line-height: normal;"><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px; ">网关超时</span></p></td></tr><tr><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px;" width="54" height="13"><p style="line-height: normal;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); font-size: 12px;">505</span></p></td><td valign="top" style="background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); padding: 4px; word-break: break-all;" width="49" height="13"><p style="line-height: normal;"><span style="font-size: 12px;"><span style="color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal; font-family: Helvetica; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0);">HTTP</span><span style=" color: rgb(0, 0, 0); font-variant-numeric: normal; font-stretch: normal; font-size: 10px; line-height: normal ; ;; font-kerning: none; font-variant-ligatures: common-ligatures; -webkit-text-stroke-color: rgb(0, 0, 0); ">版本未被支持</span></span></p></td></tr></tbody></table><p>附4. 浏览器解析  </p><p>（1）服务器返回json数据；  </p><p>（2）浏览器开始自上而下载入html代码，遇到<head>标签内的<link>标签引用外部CSS文件；  </head></p><p>（3）浏览器发出CSS文件的请求，服务器返回CSS文件；  </p><p>（4）继续载入html中<body>部分的代码，根据已获取的CSS文件，渲染页面；  </body></p><p>（5）遇到<img>标签引用了一张图片，向服务器发出请求。浏览器不等图片下载完，继续渲染后面的代码；  </p><p>（6）服务器返回图片文件，由于图片占用了一定面积，影响了后面段落的排布，因此浏览器需要回过头来重新渲染这部分代码；  </p><p>（7）遇到包含Javascript代码的<script>标签，运行；  </p><p>（8）Javascript脚本把json数据插入到dom中，浏览器重新渲染这部分代码；  </p><p>（9）遇到</html>结束。  </p><p>附5. 计算机网络体系结构协议划分  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3FvHpzCpd15vUb1B1M6ox9g1iaTqOeXUfRRGEZofTXHEgJN0GjIH2oLKwIZYLrnSSqP2uNdTMNJ4Zg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><h5 id="转自-输入网址到打开页面的过程"><a href="#转自-输入网址到打开页面的过程" class="headerlink" title="[转自] 输入网址到打开页面的过程"></a>[转自] <a href="https://mp.weixin.qq.com/s?__biz=MzI3NTQ5NTE5Mw==&amp;mid=2247483767&amp;idx=1&amp;sn=bf2be5a9e0da6d2117f5b2b0b929a5ea&amp;chksm=eb02a101dc752817b4acd6f8b085df53ec6fd93f529157887486d9b31cb0bc8b5bea80c554f2&amp;mpshare=1&amp;scene=1&amp;srcid=0628OSEkto1v08f4BuxW9Haw&amp;key=aa3a7cd9173eb904beb6605ace304c265733da98e3be4793ef9c1e2ce6c9a78c3bc2b117ed16becf0753b390be23a2bae7833aab92d7477bda1ae2b613be714d3d37d69d4368686b1e30a03353f690e7&amp;ascene=0&amp;uin=NzgyNzAwMTAx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.4+build&amp;version=12020610&amp;nettype=WIFI&amp;lang=zh_CN&amp;fontScale=100&amp;pass_ticket=3r5tdwajo%2Bn%2FJyql48TdVB%2FIyWmFLBAbbtRIhDbY8dpbaiMNp6ziZZAl21WufchK">输入网址到打开页面的过程</a></h5></script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;输入网址到打开页面的过程&quot;&gt;&lt;a href=&quot;#输入网址到打开页面的过程&quot; class=&quot;headerlink&quot; title=&quot;输入网址到打开页面的过程&quot;&gt;&lt;/a&gt;输入网址到打开页面的过程&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://mmbiz.qpic.c
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>autojump</title>
    <link href="https://github.com/stardew/autojump/"/>
    <id>https://github.com/stardew/autojump/</id>
    <published>2016-12-12T18:52:00.000Z</published>
    <updated>2018-06-28T11:05:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mac安装autojump"><a href="#mac安装autojump" class="headerlink" title="mac安装autojump"></a>mac安装autojump</h2><pre><code>autojump是一个命令行工具，它可以使用快捷命令，直接跳转到配置好的目录，而不用管现在身在何处。  </code></pre><ol><li>安装zsh：<br> <code>sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></li><li>将zsh设置成默认的shell：<code>chsh -s /bin/zsh</code> (重启shell)</li><li><code>echo $SHELL</code>可以查看用的哪个shell（bash or zsh）</li><li>安装autojump：<code>brew install autojump</code>（确保有brew）</li><li>使用<code>vim .zshrc</code>打开.zshrc（有些人会找不到.zshrc这个文件，其实安装了zsh才会有.zshrc ，在默认打开的终端目录下。可以打开终端并且ls -a查看）。<ul><li>找到 plugins=，在后面添加autojump：<code>plugins=(git autojump)</code></li><li>新开一行，添加：<code>[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] &amp;&amp; . $(brew --prefix)/etc/profile.d/autojump.sh</code></li><li><code>：wq</code>保存退出</li></ul></li><li><p>重启终端，autojump就可以使用了，例如：<br>   添加一条快捷键：<code>j -a s &#39;/Users/XXX/Desktop/code/shark’</code>（j -a 你定义的快捷命令 ‘需要跳转的目录位置’）</p><p>   进入shark：<code>j s</code></p></li></ol><h5 id="转自-mac安装autojump"><a href="#转自-mac安装autojump" class="headerlink" title="[转自] mac安装autojump"></a>[转自] <a href="https://my.oschina.net/luweiweiwei/blog/804679" target="_blank" rel="external">mac安装autojump</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mac安装autojump&quot;&gt;&lt;a href=&quot;#mac安装autojump&quot; class=&quot;headerlink&quot; title=&quot;mac安装autojump&quot;&gt;&lt;/a&gt;mac安装autojump&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;autojump是一个命令行工具，它
      
    
    </summary>
    
      <category term="工具类" scheme="https://github.com/stardew/categories/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
    
      <category term="tools" scheme="https://github.com/stardew/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>browser-engine</title>
    <link href="https://github.com/stardew/browser-engine/"/>
    <id>https://github.com/stardew/browser-engine/</id>
    <published>2016-12-11T00:00:00.000Z</published>
    <updated>2018-06-28T11:05:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3GOYRA04Ftx3MiaoktLhNaxL1zXGTaickibicFvOY1ic0ap6YnOoUXaOrjEBU9fgaSJurvla8ukicEAdVMg/0?wx_fmt=png" alt=""></p><h3 id="一、浏览器内核"><a href="#一、浏览器内核" class="headerlink" title="一、浏览器内核"></a>一、浏览器内核</h3><pre><code>主要指渲染引擎(Rendering Engine)，负责解析网页语法(如HTML、JavaScript)并渲染、展示网页。  。Trident内核（代表：Internet Explorer）      IE、傲游、世界之窗浏览器、Avant、腾讯TT、Netscape 8、NetCaptor、Sleipnir、GOSURF、GreenBrowser和KKman等。  。Gecko内核（代表：Mozilla Firefox）      Firefox、Netscape6至9。  。WebKit内核（代表：Safari、Chrome）  。Presto内核（代表：Opera7）  。Elektra内核（代表：Opera4-6）  </code></pre><h3 id="二、JavaScript引擎"><a href="#二、JavaScript引擎" class="headerlink" title="二、JavaScript引擎"></a>二、JavaScript引擎</h3><pre><code>用来执行JS代码，涉及到跑分。哪个浏览器更快，指JavaScript的渲染速度，而不是页面的载入速度，各个浏览器的页面载入速度差别不大（Opera逊色一些）  。Chakra  查克拉      IE9启用的新的JavaScript引擎  。SpiderMonkey / TraceMonkey / JaegerMonkey    SpiderMonkey应用在Mozilla Firefox 1.0-3.0，TraceMonkey应用在Mozilla Firefox 3.5-3.6版本，JaegerMonkey应用在Mozilla Firefox 4.0及后续的版本。  。V8      Chrome、傲游3  。Nitro      Safari 4及后续的版本  。Linear A/Linear B/Futhark/Carakan      Linear A应用于Opera 4.0-6.1版本，Linear B应用于Opera 7.0～9.2版本，Futhark应用于Opera 9.5-10.2版本，Carakan应用于Opera 10.5及后续的版本。  。KJS      KHTML对应的JavaScript引擎  </code></pre><h5 id="转自-浏览器引擎"><a href="#转自-浏览器引擎" class="headerlink" title="[转自] 浏览器引擎"></a>[转自] <a href="https://mp.weixin.qq.com/s?__biz=MzI3NTQ5NTE5Mw==&amp;mid=2247483755&amp;idx=1&amp;sn=6e5e73970d332b938cbfce6b8f317032&amp;chksm=eb02a11ddc75280bb64a8eeead14de075e8e85604c56dbac7b37bbb1442fe35f4ac60bba9f41&amp;mpshare=1&amp;scene=1&amp;srcid=0628giv5kvNGsXX0EhkTUjsz&amp;key=aa3a7cd9173eb904ae01e4aa45cf45f6d64e4a580b29b2f48d1a1be02eb477395c8f16dbf84e25ac954a0b8db52a0991f8c9df3ada8364d504140136aa334698fe3de74a92d65383201841d376fb8755&amp;ascene=0&amp;uin=NzgyNzAwMTAx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.4+build&amp;version=12020610&amp;nettype=WIFI&amp;lang=zh_CN&amp;fontScale=100&amp;pass_ticket=3r5tdwajo%2Bn%2FJyql48TdVB%2FIyWmFLBAbbtRIhDbY8dpbaiMNp6ziZZAl21WufchK" target="_blank" rel="external">浏览器引擎</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3GOYRA04Ftx3MiaoktLhNaxL1zXGTaickibicFvOY1ic0ap6YnOoUXaOrjEBU9fgaSJurvla8ukicEAdVMg/0?
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>data-structure</title>
    <link href="https://github.com/stardew/data-structure/"/>
    <id>https://github.com/stardew/data-structure/</id>
    <published>2016-12-09T00:00:00.000Z</published>
    <updated>2018-06-28T11:06:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据结构基础"><a href="#数据结构基础" class="headerlink" title="数据结构基础"></a>数据结构基础</h1><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkCe9RdE3enpa4Um5Xc8F1bk0I1WywW3j1m8ykOhGNgcJcz0CIZ7JRQg/0?wx_fmt=png" alt=""></p><p>数据结构是相互之间存在一种或多种特定关系的数据元素的集合。  </p><p>数据元素相互之间的关系称为结构。  </p><p>数据结构一共分四类：集合结构、线性结构、树型结构、图形结构。  </p><p>集合结构：具有某种特定性质的具体的或抽象的对象汇总成的集体。除了同属于一种类型外，别无其它关系。  </p><p>线性结构：元素之间存在一对一关系。  </p><p>特点：  </p><ol><li><p>存在唯一的一个被称作“第一个”的数据元素  </p></li><li><p>存在唯一的一个被称作“最后一个”的数据元素  </p></li><li><p>除第第一个以外，集合中的每个数据元素均只有一个前驱  </p></li><li><p>除最后一个以外，集合中每个数据元素均只有一个后继  </p></li></ol><p>常见类型有：  </p><ol><li><p>数组，链表，队列，栈。  </p></li><li><p>它们之间在操作上有所区别。  </p></li><li><p>例如：链表可在任意位置插入或删除元素，而队列在队尾插入元素，队头删除元素，栈只能在栈顶进行插入，删除操作。  </p></li></ol><p>树形结构：元素之间存在一对多关系。  </p><p>常见类型有：  </p><ol><li><p>树</p></li><li><p>有许多特例：二叉树、平衡二叉树、查找树等。  </p><p> a. 满二叉树：深度为k且有2k-1个节点的二叉树  </p></li></ol><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkDkRYDN823dVFSLicfxMDzTG9icrv1COm9HlDic1w2YmcZkGuIY19oCicgw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkdGWhDpgJzR9yeKv7Me3TyW8MReDeQkqPvodDhsFwnyQ222nruRLVqw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><pre><code>b. 完全二叉树：深度为k，有n个节点的二叉树，当且仅当其每一个节点都与深度为k的满二叉树中编号从1至n的节点一一对应时，称之为完全二叉树。  </code></pre><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkwUgjCicnRzMzUx7FAPFNk9ZZ43kTyT7VOWem0sDE66L6x6Uwph5UFHQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkWiaqibfUOKsfIp4zGCnrpVrY7QVuC61w8LNiaic39rMGVE9iaeFP2m3aQcA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><pre><code>c. huffman树：最优二叉树        i. 路径：从树中一个节点到另一个节点之间的分支构成这两个节点之间的路径      ii. 路径长度：路径上的分枝数目      iii. 树的带权路径长度为：WPL=w1l1+w2l2+...+wnln      iv. 假设有n个权值{w1,w2,…,wn}，试构造一颗有n个叶子节点的二叉树，每个叶子节点带权为wi，则其中带权路径长度WPL最小的二叉树称作最优二叉树（huffman树）      v. w=(5, 29, 7, 8, 14, 23, 3, 11), n=8, m=15, 构造huffman树。      教科书上结果：  </code></pre><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkiamlT9xfXhjNGmAWevmUBP54Dgs1a94pge2ziaf46l7EWXibyo86SH57Q/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>WPL=3<em>4 + 5</em>4 + 7<em>4 + 8</em>4 + 11<em>3 + 14</em>3 + 23<em>2 + 29</em>2 = 271  </p><p>自己构造思路：从小到大排好序{3，5，7，8，11，14，23，29}，两两之和（红圈）与未构造数字（黑圈）比较，取小构造。  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkDO2hYlCsibyEzlWPiaZMWgJrmibYtmXkU1XqTzZma1TG73CyyFqiaAv8YA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>WPL=3<em>5 + 5</em>5 + 7<em>4 + 8</em>3 + 11<em>3 + 14</em>3 + 23<em>2 +29</em>2 = 271<br>结论：huffman树构造结果不唯一。  </p><p>图形结构：元素之间存在多对多关系，图形结构中每个结点的前驱结点数和后续结点多个数可以任意(任意多个)。  </p><p>图的遍历包括深度优先遍历和广度优先遍历：  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkpiaabsicuCujibcP0Vmm5WtT5f0aqGucaHAibZJtq58pbqeiaormDBhehtw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>深度优先遍历：v1—&gt;v2—&gt;v4—&gt;v8—&gt;v5—&gt;v3—&gt;v6—&gt;v7  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkTeP5KRwmFJgQCDuvEIOUe3I7NGW99GLnoK5Q2kC2lQZxIhozvaWfGw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>广度优先遍历：v1—&gt;v2—&gt;v3—&gt;v4—&gt;v5—&gt;v6—&gt;v7—&gt;v8  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkjz654o9s9fUmsgVF4mKBY69GkQAX6NhtwLorTTt7icOHY8QgEpDHrxA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>最小生成树的问题：假设要在n个城市之间建立通信联络网，则连通n个城市只需要n-1条线路。这时。自然会考虑这样一个问题，如何在节省经费的前提下建立这个通信网。  </p><p>辅助表各参数说明：  </p><ol><li><p>i行的1，2，3，4，5分别为（v2，v3，v4，v5，v6）  </p></li><li><p>k为最小边对应的i值  </p></li><li><p>例如第三组3-3中的v6和2，表示（v1，v3，v6）与v4的最小边为v4—v6的权值2。  </p></li></ol><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkK1jHAIlaeQIUoicVjKaazqp6M2IAEia6SXVgiclSOB0s6zfNxp00AbydQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6KdP1dI8zbZVp81r47LRkXIObeic1VueF6p0ZS7p3hEiaa6st40bkoWlVG9tRF1kw1bicNU3d1puibA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p><p>哈希表：根据哈希函数H(key)和处理冲突的方法将一组关键字映射到一个有限的连续的地址集（区间）上，并以关键字在地址集中的“像”作为记录在表中的存储位置，这种表便称哈希表。  </p><p>构造哈希表：  </p><ol><li><p>直接定址法</p></li><li><p>数字分析法</p></li><li><p>平方取中法</p></li><li><p>折叠法</p></li><li><p>除留取余法</p></li><li><p>随机数法</p></li></ol><p>处理冲突的方法：  </p><ol><li><p>开放定址法</p></li><li><p>再哈希法</p></li><li><p>链地址法</p></li><li><p>建立一个公共溢出区</p></li></ol><p>常见数据结构  </p><ol><li><p>队列：队尾插入元素，队头删除元素。</p></li><li><p>栈：栈顶进行插入、删除操作。</p></li><li><p>堆：数组对象，可以被视为一棵完全二叉树结构。特点是父节点的值大于（小于）两个子节点的值（分别称为大顶堆和小顶堆）。</p></li><li><p>链表：物理存储单元上非连续、非顺序的存储结构。插入删除有优势，查找弱势。</p></li><li><p>数组：查找有优势，插入删除弱势，后面所有元素都需移动。</p></li></ol><p>存储  </p><ol><li><p>栈区：由编译器自动分配释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。</p></li><li><p>堆区：一般由程序员分配释放，若程序员不释放，程序结束时可能由OS回收。它与数据结构中的堆是两回事，分配方式倒是类似于链表。</p></li></ol><h5 id="转自-数据结构基础"><a href="#转自-数据结构基础" class="headerlink" title="[转自] 数据结构基础"></a>[转自] <a href="https://mp.weixin.qq.com/s?__biz=MzI3NTQ5NTE5Mw==&amp;mid=2247483751&amp;idx=1&amp;sn=7e36feb69c0f2a5049fb23b1c77624e8&amp;chksm=eb02a111dc752807118a7db38335be7efe667a88c9e6a16fec2b8a40b76efe0d2dcbbba7a263&amp;scene=0&amp;key=aa3a7cd9173eb9043a79b0edce43c5ec046454ba47464922369ebba4e583a0cea87885455878181c435dcd5f116a111177f2d2b3bee812558f528e290c8e0da6def301d0405c05fecf148e78fb829e29&amp;ascene=0&amp;uin=NzgyNzAwMTAx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.4+build&amp;version=12020610&amp;nettype=WIFI&amp;lang=zh_CN&amp;fontScale=100&amp;pass_ticket=3r5tdwajo%2Bn%2FJyql48TdVB%2FIyWmFLBAbbtRIhDbY8dpbaiMNp6ziZZAl21WufchK" target="_blank" rel="external">数据结构基础</a></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据结构基础&quot;&gt;&lt;a href=&quot;#数据结构基础&quot; class=&quot;headerlink&quot; title=&quot;数据结构基础&quot;&gt;&lt;/a&gt;数据结构基础&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0vF1DtfHb3H6
      
    
    </summary>
    
      <category term="前端基础" scheme="https://github.com/stardew/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="javascript" scheme="https://github.com/stardew/tags/javascript/"/>
    
  </entry>
  
</feed>
